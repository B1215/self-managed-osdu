{{- $namespace := .Release.Namespace }}
{{- $pullPolicy := .Values.pullPolicy -}}
{{- $servicePort := .Values.service.port -}}
{{- $replicaCount := .Values.replicaCount -}}
{{- $nodePool := .Values.nodePool}}
{{- $podIdentity := .Values.podIdentity}}
{{- $podAnnotations := .Values.podAnnotations}}
{{- $version := .Chart.AppVersion -}}
{{- $selectorLabels := include "self-managed-service.selectorLabels" . | nindent 8 }}
{{- $labels := include "self-managed-service.labels" . | nindent 4 }}
{{- range .Values.configuration }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .service }}
  labels: {{ $labels }}
    app: {{ .service }}
spec:
{{- if not .autoscale }}
  replicas: {{ .replicaCount | default $replicaCount }}
  selector:
    matchLabels: {{ $selectorLabels }}
{{- end }}
  template:
    metadata:
    {{- with $podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels: {{ $selectorLabels }}
    spec:
      {{- if $nodePool }}
      nodeSelector:
        nodepool: {{ $nodePool }}
      {{- end }}
      volumes:
      {{- if .keyvault }}
        - name: azure-keyvault
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: azure-keyvault
      {{- end }}
      {{- range .pvc }}
        - name: {{ .volume }}
          persistentVolumeClaim:
            claimName: {{ .name }}-pvc
      {{- end }}
      containers:
        - name: {{ .service }}
          image: {{ .repository }}:{{ .tag | default $version }}
          imagePullPolicy: {{ $pullPolicy | default "Always" }}
          ports:
            - name: http
              containerPort: {{ $servicePort }}
              protocol: TCP
          {{- if .probe }}
          readinessProbe:
            httpGet:
              path: {{ .probe }}
              port: http
            initialDelaySeconds: 20
          {{- end }}
          resources:
          {{- if .request }}
            requests:
              cpu: {{ .request.cpu | quote }}
              memory: {{ .request.memory | quote }}
          {{- end }}
          {{- if .limit }}
            limits:
              cpu: {{ .limit.cpu | quote }}
              memory: {{ .limit.memory | quote }}
          {{- end }}
          volumeMounts:
          {{- if .keyvault }}
          - name: azure-keyvault
            mountPath: "/mnt/azure-keyvault"
            readOnly: true
          {{- end }}
          {{- range .mount }}
          - name: {{ .name }}
            mountPath: {{ .path }}
          {{- end }}
          {{- if .env }}
          env:
            {{- range .env }}
            - name: {{ .name }}
              {{- if .value }}
              {{- $v := .value }}
              value: {{ tpl ($v | quote) $ }}
              {{- end }}
              {{- if .config }}
              valueFrom:
                configMapKeyRef:
                  name: {{ .config.name }}
                  key: {{ .config.key | quote }}
              {{- end }}
              {{- if .secret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secret.name | quote }}
                  key: {{ .secret.key | quote }}
              {{- end }}
            {{- end }}
          {{- end }}
---
{{- end }}
