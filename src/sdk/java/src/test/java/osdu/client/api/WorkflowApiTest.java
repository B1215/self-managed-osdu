/*
 * self-managed-osdu
 * Rest API Documentation for Self Managed OSDU
 *
 * OpenAPI spec version: 0.11.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package osdu.client.api;

import osdu.client.ApiException;
import osdu.client.model.Workflow;
import osdu.client.model.WorkflowError;
import osdu.client.model.WorkflowRun;
import osdu.client.model.WorkflowTriggerRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkflowApi
 */
@Ignore
public class WorkflowApiTest {

    private final WorkflowApi api = new WorkflowApi();

    
    /**
     * Delete a workflow defintion.
     *
     * Delete a workflow by it&#39;s name.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteWorkflowTest() throws ApiException {
        String workflowName = null;
        api.deleteWorkflow(workflowName);

        // TODO: test validations
    }
    
    /**
     * Creates workflow definition with standard orchestrator operators.
     *
     * API to create a new workflow using standard operators of orchestrator.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deployWorkflowTest() throws ApiException {
        Workflow body = null;
        Workflow response = api.deployWorkflow(body);

        // TODO: test validations
    }
    
    /**
     * Get all run instances of a workflow.
     *
     * Get all run instances for a worflow.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllWorkflowRunsTest() throws ApiException {
        String workflowName = null;
        String prefix = null;
        String startDate = null;
        Boolean endDate = null;
        Integer limit = null;
        String cursor = null;
        Boolean partial = null;
        String conf = null;
        List<WorkflowRun> response = api.getAllWorkflowRuns(workflowName, prefix, startDate, endDate, limit, cursor, partial, conf);

        // TODO: test validations
    }
    
    /**
     * Get details for a speciffic workflow run instance.
     *
     * Get an execution instances for a workflow.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWorkflowRunTest() throws ApiException {
        String workflowName = null;
        String runId = null;
        WorkflowRun response = api.getWorkflowRun(workflowName, runId);

        // TODO: test validations
    }
    
    /**
     * List all the workflow applicable for a tenant.
     *
     * List all the workflows for the tenant.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAllWorkflowTest() throws ApiException {
        String prefix = null;
        List<Workflow> response = api.listAllWorkflow(prefix);

        // TODO: test validations
    }
    
    /**
     * Trigger a workflow.
     *
     * Trigger a workflow mentioned in payload.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void triggerWorkflowTest() throws ApiException {
        String workflowName = null;
        WorkflowTriggerRequest body = null;
        WorkflowRun response = api.triggerWorkflow(workflowName, body);

        // TODO: test validations
    }
    
    /**
     * Update the workflow run instance.
     *
     * Update workflow run.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateWorkflowRunTest() throws ApiException {
        String workflowName = null;
        String runId = null;
        WorkflowRun body = null;
        Workflow response = api.updateWorkflowRun(workflowName, runId, body);

        // TODO: test validations
    }
    
    /**
     * Get complete details for a workflow.
     *
     * Get complete details for an workflow.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void viewWorkflowTest() throws ApiException {
        String workflowName = null;
        Workflow response = api.viewWorkflow(workflowName);

        // TODO: test validations
    }
    
}
