/* 
 * self-managed-osdu
 *
 * Rest API Documentation for Self Managed OSDU
 *
 * OpenAPI spec version: 0.11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using OsduClient.Client;
using OsduClient.Api;
using OsduClient.Model;

namespace OsduClient.Test
{
    /// <summary>
    ///  Class for testing SearchApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SearchApiTests
    {
        private SearchApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SearchApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SearchApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SearchApi
            //Assert.IsInstanceOfType(typeof(SearchApi), instance, "instance is a SearchApi");
        }

        
        /// <summary>
        /// Test DeleteIndex
        /// </summary>
        [Test]
        public void DeleteIndexTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string oSDUAccountId = null;
            //string kind = null;
            //string oSDUOnBehalfOf = null;
            //instance.DeleteIndex(oSDUAccountId, kind, oSDUOnBehalfOf);
            
        }
        
        /// <summary>
        /// Test GetKindSchema
        /// </summary>
        [Test]
        public void GetKindSchemaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string oSDUAccountId = null;
            //string kind = null;
            //string oSDUOnBehalfOf = null;
            //var response = instance.GetKindSchema(oSDUAccountId, kind, oSDUOnBehalfOf);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test QueryRecords
        /// </summary>
        [Test]
        public void QueryRecordsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string oSDUAccountId = null;
            //SearchQueryRequest body = null;
            //string oSDUOnBehalfOf = null;
            //var response = instance.QueryRecords(oSDUAccountId, body, oSDUOnBehalfOf);
            //Assert.IsInstanceOf<SearchQueryResponse> (response, "response is SearchQueryResponse");
        }
        
        /// <summary>
        /// Test QueryWithCursor
        /// </summary>
        [Test]
        public void QueryWithCursorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string oSDUAccountId = null;
            //SearchCursorQueryRequest body = null;
            //string oSDUOnBehalfOf = null;
            //var response = instance.QueryWithCursor(oSDUAccountId, body, oSDUOnBehalfOf);
            //Assert.IsInstanceOf<SearchCursorQueryResponse> (response, "response is SearchCursorQueryResponse");
        }
        
    }

}
