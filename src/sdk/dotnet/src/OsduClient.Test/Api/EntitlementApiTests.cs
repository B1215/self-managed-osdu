/* 
 * self-managed-osdu
 *
 * Rest API Documentation for Self Managed OSDU
 *
 * OpenAPI spec version: 0.11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using OsduClient.Client;
using OsduClient.Api;
using OsduClient.Model;

namespace OsduClient.Test
{
    /// <summary>
    ///  Class for testing EntitlementApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class EntitlementApiTests
    {
        private EntitlementApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new EntitlementApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of EntitlementApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' EntitlementApi
            //Assert.IsInstanceOfType(typeof(EntitlementApi), instance, "instance is a EntitlementApi");
        }

        
        /// <summary>
        /// Test AddMemberUsingPOST
        /// </summary>
        [Test]
        public void AddMemberUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataPartitionId = null;
            //string groupEmail = null;
            //EntitlementMemberDto partitionInfo = null;
            //var response = instance.AddMemberUsingPOST(dataPartitionId, groupEmail, partitionInfo);
            //Assert.IsInstanceOf<EntitlementMemberDto> (response, "response is EntitlementMemberDto");
        }
        
        /// <summary>
        /// Test CreateGroupUsingPOST
        /// </summary>
        [Test]
        public void CreateGroupUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataPartitionId = null;
            //instance.CreateGroupUsingPOST(dataPartitionId);
            
        }
        
        /// <summary>
        /// Test DeleteGroupUsingDELETE
        /// </summary>
        [Test]
        public void DeleteGroupUsingDELETETest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataPartitionId = null;
            //string groupEmail = null;
            //instance.DeleteGroupUsingDELETE(dataPartitionId, groupEmail);
            
        }
        
        /// <summary>
        /// Test DeleteMemberUsingDELETE
        /// </summary>
        [Test]
        public void DeleteMemberUsingDELETETest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataPartitionId = null;
            //string memberEmail = null;
            //instance.DeleteMemberUsingDELETE(dataPartitionId, memberEmail);
            
        }
        
        /// <summary>
        /// Test DeleteMemberUsingDELETE1
        /// </summary>
        [Test]
        public void DeleteMemberUsingDELETE1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataPartitionId = null;
            //string groupEmail = null;
            //string memberEmail = null;
            //var response = instance.DeleteMemberUsingDELETE1(dataPartitionId, groupEmail, memberEmail);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test ListGroupMembersUsingGET
        /// </summary>
        [Test]
        public void ListGroupMembersUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataPartitionId = null;
            //string groupEmail = null;
            //string role = null;
            //bool? includeType = null;
            //instance.ListGroupMembersUsingGET(dataPartitionId, groupEmail, role, includeType);
            
        }
        
        /// <summary>
        /// Test ListGroupsOnBehalfOfUsingGET
        /// </summary>
        [Test]
        public void ListGroupsOnBehalfOfUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataPartitionId = null;
            //string memberEmail = null;
            //string type = null;
            //string appid = null;
            //instance.ListGroupsOnBehalfOfUsingGET(dataPartitionId, memberEmail, type, appid);
            
        }
        
        /// <summary>
        /// Test ListGroupsUsingGET
        /// </summary>
        [Test]
        public void ListGroupsUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataPartitionId = null;
            //var response = instance.ListGroupsUsingGET(dataPartitionId);
            //Assert.IsInstanceOf<EntitlementGroupResponse> (response, "response is EntitlementGroupResponse");
        }
        
        /// <summary>
        /// Test UpdateGroupUsingPATCH
        /// </summary>
        [Test]
        public void UpdateGroupUsingPATCHTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataPartitionId = null;
            //string groupEmail = null;
            //instance.UpdateGroupUsingPATCH(dataPartitionId, groupEmail);
            
        }
        
    }

}
