/* 
 * self-managed-osdu
 *
 * Rest API Documentation for Self Managed OSDU
 *
 * OpenAPI spec version: 0.11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// EntitlementGroupResponse
    /// </summary>
    [DataContract]
    public partial class EntitlementGroupResponse :  IEquatable<EntitlementGroupResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EntitlementGroupResponse" /> class.
        /// </summary>
        /// <param name="desId">desId.</param>
        /// <param name="memberEmail">memberEmail.</param>
        /// <param name="groups">A collection of groups..</param>
        public EntitlementGroupResponse(string desId = default(string), string memberEmail = default(string), List<EntitlementGroupProperties> groups = default(List<EntitlementGroupProperties>))
        {
            this.DesId = desId;
            this.MemberEmail = memberEmail;
            this.Groups = groups;
        }
        
        /// <summary>
        /// Gets or Sets DesId
        /// </summary>
        [DataMember(Name="desId", EmitDefaultValue=false)]
        public string DesId { get; set; }

        /// <summary>
        /// Gets or Sets MemberEmail
        /// </summary>
        [DataMember(Name="memberEmail", EmitDefaultValue=false)]
        public string MemberEmail { get; set; }

        /// <summary>
        /// A collection of groups.
        /// </summary>
        /// <value>A collection of groups.</value>
        [DataMember(Name="groups", EmitDefaultValue=false)]
        public List<EntitlementGroupProperties> Groups { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EntitlementGroupResponse {\n");
            sb.Append("  DesId: ").Append(DesId).Append("\n");
            sb.Append("  MemberEmail: ").Append(MemberEmail).Append("\n");
            sb.Append("  Groups: ").Append(Groups).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EntitlementGroupResponse);
        }

        /// <summary>
        /// Returns true if EntitlementGroupResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of EntitlementGroupResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EntitlementGroupResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DesId == input.DesId ||
                    (this.DesId != null &&
                    this.DesId.Equals(input.DesId))
                ) && 
                (
                    this.MemberEmail == input.MemberEmail ||
                    (this.MemberEmail != null &&
                    this.MemberEmail.Equals(input.MemberEmail))
                ) && 
                (
                    this.Groups == input.Groups ||
                    this.Groups != null &&
                    this.Groups.SequenceEqual(input.Groups)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DesId != null)
                    hashCode = hashCode * 59 + this.DesId.GetHashCode();
                if (this.MemberEmail != null)
                    hashCode = hashCode * 59 + this.MemberEmail.GetHashCode();
                if (this.Groups != null)
                    hashCode = hashCode * 59 + this.Groups.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
