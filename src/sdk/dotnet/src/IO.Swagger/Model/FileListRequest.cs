/* 
 * self-managed-osdu
 *
 * Rest API Documentation for Self Managed OSDU
 *
 * OpenAPI spec version: 0.11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// FileListRequest
    /// </summary>
    [DataContract]
    public partial class FileListRequest :  IEquatable<FileListRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FileListRequest" /> class.
        /// </summary>
        /// <param name="timeFrom">timeFrom.</param>
        /// <param name="timeTo">timeTo.</param>
        /// <param name="pageNum">pageNum.</param>
        /// <param name="items">items.</param>
        /// <param name="userID">userID.</param>
        public FileListRequest(DateTime? timeFrom = default(DateTime?), DateTime? timeTo = default(DateTime?), int? pageNum = default(int?), int? items = default(int?), string userID = default(string))
        {
            this.TimeFrom = timeFrom;
            this.TimeTo = timeTo;
            this.PageNum = pageNum;
            this.Items = items;
            this.UserID = userID;
        }
        
        /// <summary>
        /// Gets or Sets TimeFrom
        /// </summary>
        [DataMember(Name="TimeFrom", EmitDefaultValue=false)]
        public DateTime? TimeFrom { get; set; }

        /// <summary>
        /// Gets or Sets TimeTo
        /// </summary>
        [DataMember(Name="TimeTo", EmitDefaultValue=false)]
        public DateTime? TimeTo { get; set; }

        /// <summary>
        /// Gets or Sets PageNum
        /// </summary>
        [DataMember(Name="PageNum", EmitDefaultValue=false)]
        public int? PageNum { get; set; }

        /// <summary>
        /// Gets or Sets Items
        /// </summary>
        [DataMember(Name="Items", EmitDefaultValue=false)]
        public int? Items { get; set; }

        /// <summary>
        /// Gets or Sets UserID
        /// </summary>
        [DataMember(Name="UserID", EmitDefaultValue=false)]
        public string UserID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FileListRequest {\n");
            sb.Append("  TimeFrom: ").Append(TimeFrom).Append("\n");
            sb.Append("  TimeTo: ").Append(TimeTo).Append("\n");
            sb.Append("  PageNum: ").Append(PageNum).Append("\n");
            sb.Append("  Items: ").Append(Items).Append("\n");
            sb.Append("  UserID: ").Append(UserID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FileListRequest);
        }

        /// <summary>
        /// Returns true if FileListRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of FileListRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FileListRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TimeFrom == input.TimeFrom ||
                    (this.TimeFrom != null &&
                    this.TimeFrom.Equals(input.TimeFrom))
                ) && 
                (
                    this.TimeTo == input.TimeTo ||
                    (this.TimeTo != null &&
                    this.TimeTo.Equals(input.TimeTo))
                ) && 
                (
                    this.PageNum == input.PageNum ||
                    (this.PageNum != null &&
                    this.PageNum.Equals(input.PageNum))
                ) && 
                (
                    this.Items == input.Items ||
                    (this.Items != null &&
                    this.Items.Equals(input.Items))
                ) && 
                (
                    this.UserID == input.UserID ||
                    (this.UserID != null &&
                    this.UserID.Equals(input.UserID))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TimeFrom != null)
                    hashCode = hashCode * 59 + this.TimeFrom.GetHashCode();
                if (this.TimeTo != null)
                    hashCode = hashCode * 59 + this.TimeTo.GetHashCode();
                if (this.PageNum != null)
                    hashCode = hashCode * 59 + this.PageNum.GetHashCode();
                if (this.Items != null)
                    hashCode = hashCode * 59 + this.Items.GetHashCode();
                if (this.UserID != null)
                    hashCode = hashCode * 59 + this.UserID.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
