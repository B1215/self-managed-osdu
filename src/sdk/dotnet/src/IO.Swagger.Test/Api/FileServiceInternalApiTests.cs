/* 
 * self-managed-osdu
 *
 * Rest API Documentation for Self Managed OSDU
 *
 * OpenAPI spec version: 0.11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing FileServiceInternalApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class FileServiceInternalApiTests
    {
        private FileServiceInternalApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new FileServiceInternalApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FileServiceInternalApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' FileServiceInternalApi
            //Assert.IsInstanceOfType(typeof(FileServiceInternalApi), instance, "instance is a FileServiceInternalApi");
        }

        
        /// <summary>
        /// Test AllowsTheApplicationToAuditTheAttemptedFileUploadsTheMethodIsInternalAndIsNotAvailableForThirdPartyApplications_
        /// </summary>
        [Test]
        public void AllowsTheApplicationToAuditTheAttemptedFileUploadsTheMethodIsInternalAndIsNotAvailableForThirdPartyApplications_Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataPartitionId = null;
            //FileListRequest body = null;
            //var response = instance.AllowsTheApplicationToAuditTheAttemptedFileUploadsTheMethodIsInternalAndIsNotAvailableForThirdPartyApplications_(dataPartitionId, body);
            //Assert.IsInstanceOf<FileListResponse> (response, "response is FileListResponse");
        }
        
        /// <summary>
        /// Test ReturnsFileLocationAndDriver_
        /// </summary>
        [Test]
        public void ReturnsFileLocationAndDriver_Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataPartitionId = null;
            //FileLocationRequest body = null;
            //var response = instance.ReturnsFileLocationAndDriver_(dataPartitionId, body);
            //Assert.IsInstanceOf<FileLocationResponse> (response, "response is FileLocationResponse");
        }
        
    }

}
