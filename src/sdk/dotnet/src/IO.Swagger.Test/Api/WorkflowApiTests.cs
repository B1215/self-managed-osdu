/* 
 * self-managed-osdu
 *
 * Rest API Documentation for Self Managed OSDU
 *
 * OpenAPI spec version: 0.11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing WorkflowApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class WorkflowApiTests
    {
        private WorkflowApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WorkflowApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WorkflowApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' WorkflowApi
            //Assert.IsInstanceOfType(typeof(WorkflowApi), instance, "instance is a WorkflowApi");
        }

        
        /// <summary>
        /// Test DeleteWorkflow
        /// </summary>
        [Test]
        public void DeleteWorkflowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workflowName = null;
            //instance.DeleteWorkflow(workflowName);
            
        }
        
        /// <summary>
        /// Test DeployWorkflow
        /// </summary>
        [Test]
        public void DeployWorkflowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Workflow body = null;
            //var response = instance.DeployWorkflow(body);
            //Assert.IsInstanceOf<Workflow> (response, "response is Workflow");
        }
        
        /// <summary>
        /// Test GetAllWorkflowRuns
        /// </summary>
        [Test]
        public void GetAllWorkflowRunsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workflowName = null;
            //string prefix = null;
            //string startDate = null;
            //bool? endDate = null;
            //int? limit = null;
            //string cursor = null;
            //bool? partial = null;
            //string conf = null;
            //var response = instance.GetAllWorkflowRuns(workflowName, prefix, startDate, endDate, limit, cursor, partial, conf);
            //Assert.IsInstanceOf<List<WorkflowRun>> (response, "response is List<WorkflowRun>");
        }
        
        /// <summary>
        /// Test GetWorkflowRun
        /// </summary>
        [Test]
        public void GetWorkflowRunTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workflowName = null;
            //string runId = null;
            //var response = instance.GetWorkflowRun(workflowName, runId);
            //Assert.IsInstanceOf<WorkflowRun> (response, "response is WorkflowRun");
        }
        
        /// <summary>
        /// Test ListAllWorkflow
        /// </summary>
        [Test]
        public void ListAllWorkflowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string prefix = null;
            //var response = instance.ListAllWorkflow(prefix);
            //Assert.IsInstanceOf<List<Workflow>> (response, "response is List<Workflow>");
        }
        
        /// <summary>
        /// Test TriggerWorkflow
        /// </summary>
        [Test]
        public void TriggerWorkflowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workflowName = null;
            //WorkflowTriggerRequest body = null;
            //var response = instance.TriggerWorkflow(workflowName, body);
            //Assert.IsInstanceOf<WorkflowRun> (response, "response is WorkflowRun");
        }
        
        /// <summary>
        /// Test UpdateWorkflowRun
        /// </summary>
        [Test]
        public void UpdateWorkflowRunTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workflowName = null;
            //string runId = null;
            //WorkflowRun body = null;
            //var response = instance.UpdateWorkflowRun(workflowName, runId, body);
            //Assert.IsInstanceOf<Workflow> (response, "response is Workflow");
        }
        
        /// <summary>
        /// Test ViewWorkflow
        /// </summary>
        [Test]
        public void ViewWorkflowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workflowName = null;
            //var response = instance.ViewWorkflow(workflowName);
            //Assert.IsInstanceOf<Workflow> (response, "response is Workflow");
        }
        
    }

}
