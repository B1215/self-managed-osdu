# coding: utf-8

"""
    self-managed-osdu

    Rest API Documentation for Self Managed OSDU  # noqa: E501

    OpenAPI spec version: 0.11.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.configuration import Configuration


class FileListRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'time_from': 'FileDateTime',
        'time_to': 'FileDateTime',
        'page_num': 'int',
        'items': 'int',
        'user_id': 'str'
    }

    attribute_map = {
        'time_from': 'TimeFrom',
        'time_to': 'TimeTo',
        'page_num': 'PageNum',
        'items': 'Items',
        'user_id': 'UserID'
    }

    def __init__(self, time_from=None, time_to=None, page_num=None, items=None, user_id=None, _configuration=None):  # noqa: E501
        """FileListRequest - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._time_from = None
        self._time_to = None
        self._page_num = None
        self._items = None
        self._user_id = None
        self.discriminator = None

        if time_from is not None:
            self.time_from = time_from
        if time_to is not None:
            self.time_to = time_to
        if page_num is not None:
            self.page_num = page_num
        if items is not None:
            self.items = items
        if user_id is not None:
            self.user_id = user_id

    @property
    def time_from(self):
        """Gets the time_from of this FileListRequest.  # noqa: E501


        :return: The time_from of this FileListRequest.  # noqa: E501
        :rtype: FileDateTime
        """
        return self._time_from

    @time_from.setter
    def time_from(self, time_from):
        """Sets the time_from of this FileListRequest.


        :param time_from: The time_from of this FileListRequest.  # noqa: E501
        :type: FileDateTime
        """

        self._time_from = time_from

    @property
    def time_to(self):
        """Gets the time_to of this FileListRequest.  # noqa: E501


        :return: The time_to of this FileListRequest.  # noqa: E501
        :rtype: FileDateTime
        """
        return self._time_to

    @time_to.setter
    def time_to(self, time_to):
        """Sets the time_to of this FileListRequest.


        :param time_to: The time_to of this FileListRequest.  # noqa: E501
        :type: FileDateTime
        """

        self._time_to = time_to

    @property
    def page_num(self):
        """Gets the page_num of this FileListRequest.  # noqa: E501


        :return: The page_num of this FileListRequest.  # noqa: E501
        :rtype: int
        """
        return self._page_num

    @page_num.setter
    def page_num(self, page_num):
        """Sets the page_num of this FileListRequest.


        :param page_num: The page_num of this FileListRequest.  # noqa: E501
        :type: int
        """

        self._page_num = page_num

    @property
    def items(self):
        """Gets the items of this FileListRequest.  # noqa: E501


        :return: The items of this FileListRequest.  # noqa: E501
        :rtype: int
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this FileListRequest.


        :param items: The items of this FileListRequest.  # noqa: E501
        :type: int
        """

        self._items = items

    @property
    def user_id(self):
        """Gets the user_id of this FileListRequest.  # noqa: E501


        :return: The user_id of this FileListRequest.  # noqa: E501
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this FileListRequest.


        :param user_id: The user_id of this FileListRequest.  # noqa: E501
        :type: str
        """

        self._user_id = user_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FileListRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FileListRequest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, FileListRequest):
            return True

        return self.to_dict() != other.to_dict()
