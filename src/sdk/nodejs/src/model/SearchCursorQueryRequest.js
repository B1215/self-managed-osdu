/*
 * self-managed-osdu
 * Rest API Documentation for Self Managed OSDU
 *
 * OpenAPI spec version: 0.11.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.22
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SearchSpatialFilter'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SearchSpatialFilter'));
  } else {
    // Browser globals (root is window)
    if (!root.SelfManagedOsdu) {
      root.SelfManagedOsdu = {};
    }
    root.SelfManagedOsdu.SearchCursorQueryRequest = factory(root.SelfManagedOsdu.ApiClient, root.SelfManagedOsdu.SearchSpatialFilter);
  }
}(this, function(ApiClient, SearchSpatialFilter) {
  'use strict';

  /**
   * The SearchCursorQueryRequest model module.
   * @module model/SearchCursorQueryRequest
   * @version 0.11.0
   */

  /**
   * Constructs a new <code>SearchCursorQueryRequest</code>.
   * Json object to query the Search API
   * @alias module:model/SearchCursorQueryRequest
   * @class
   * @param kind {String} The kind of the record to query e.g. 'tenant1:test:well:1.0.0'.
   */
  var exports = function(kind) {
    this.kind = kind;
  };

  /**
   * Constructs a <code>SearchCursorQueryRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SearchCursorQueryRequest} obj Optional instance to populate.
   * @return {module:model/SearchCursorQueryRequest} The populated <code>SearchCursorQueryRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('cursor'))
        obj.cursor = ApiClient.convertToType(data['cursor'], 'String');
      if (data.hasOwnProperty('kind'))
        obj.kind = ApiClient.convertToType(data['kind'], 'String');
      if (data.hasOwnProperty('limit'))
        obj.limit = ApiClient.convertToType(data['limit'], 'Number');
      if (data.hasOwnProperty('query'))
        obj.query = ApiClient.convertToType(data['query'], 'String');
      if (data.hasOwnProperty('spatialFilter'))
        obj.spatialFilter = SearchSpatialFilter.constructFromObject(data['spatialFilter']);
      if (data.hasOwnProperty('returnedFields'))
        obj.returnedFields = ApiClient.convertToType(data['returnedFields'], ['String']);
    }
    return obj;
  }

  /**
   * The cursor value returned from a previous query.
   * @member {String} cursor
   */
  exports.prototype.cursor = undefined;

  /**
   * The kind of the record to query e.g. 'tenant1:test:well:1.0.0'.
   * @member {String} kind
   */
  exports.prototype.kind = undefined;

  /**
   * The maximum number of results to return from the given offset. If no limit is provided, then it will return 10 items. Max number of items which can be fetched by the query is 1000.
   * @member {Number} limit
   */
  exports.prototype.limit = undefined;

  /**
   * The query string in Lucene query string syntax.
   * @member {String} query
   */
  exports.prototype.query = undefined;

  /**
   * @member {module:model/SearchSpatialFilter} spatialFilter
   */
  exports.prototype.spatialFilter = undefined;

  /**
   * The fields on which to project the results.
   * @member {Array.<String>} returnedFields
   */
  exports.prototype.returnedFields = undefined;


  return exports;

}));
