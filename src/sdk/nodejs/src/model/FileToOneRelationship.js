/*
 * self-managed-osdu
 * Rest API Documentation for Self Managed OSDU
 *
 * OpenAPI spec version: 0.11.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.22
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.SelfManagedOsdu) {
      root.SelfManagedOsdu = {};
    }
    root.SelfManagedOsdu.FileToOneRelationship = factory(root.SelfManagedOsdu.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The FileToOneRelationship model module.
   * @module model/FileToOneRelationship
   * @version 0.11.0
   */

  /**
   * Constructs a new <code>FileToOneRelationship</code>.
   * A relationship from this entity to one other entity either by natural key (name) or id, optionally classified by confidence level
   * @alias module:model/FileToOneRelationship
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>FileToOneRelationship</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FileToOneRelationship} obj Optional instance to populate.
   * @return {module:model/FileToOneRelationship} The populated <code>FileToOneRelationship</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('confidence'))
        obj.confidence = ApiClient.convertToType(data['confidence'], 'Number');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('version'))
        obj.version = ApiClient.convertToType(data['version'], 'Number');
    }
    return obj;
  }

  /**
   * The confidence of the relationship. If the property is absent a well-known relation is implied.
   * @member {Number} confidence
   */
  exports.prototype.confidence = undefined;

  /**
   * The id of the related object in the Data Ecosystem. If set, the id has priority over the natural key in the name property.
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * The name or natural key of the related object. This property is required if the target object id could not (yet) be identified.
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * The version number of the related entity. If no version number is specified, the last version is implied.
   * @member {Number} version
   */
  exports.prototype.version = undefined;


  return exports;

}));
