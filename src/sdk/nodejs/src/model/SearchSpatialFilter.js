/*
 * self-managed-osdu
 * Rest API Documentation for Self Managed OSDU
 *
 * OpenAPI spec version: 0.11.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.22
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SearchByBoundingBox', 'model/SearchByDistance', 'model/SearchByGeoPolygon'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SearchByBoundingBox'), require('./SearchByDistance'), require('./SearchByGeoPolygon'));
  } else {
    // Browser globals (root is window)
    if (!root.SelfManagedOsdu) {
      root.SelfManagedOsdu = {};
    }
    root.SelfManagedOsdu.SearchSpatialFilter = factory(root.SelfManagedOsdu.ApiClient, root.SelfManagedOsdu.SearchByBoundingBox, root.SelfManagedOsdu.SearchByDistance, root.SelfManagedOsdu.SearchByGeoPolygon);
  }
}(this, function(ApiClient, SearchByBoundingBox, SearchByDistance, SearchByGeoPolygon) {
  'use strict';

  /**
   * The SearchSpatialFilter model module.
   * @module model/SearchSpatialFilter
   * @version 0.11.0
   */

  /**
   * Constructs a new <code>SearchSpatialFilter</code>.
   * This filter is used to filter geo-point geo data which supports lat/lon pairs. The queries in this group are Geo Distance, Geo Polygon and Bounding Box. Only one spatial criteria can be used while defining filter.
   * @alias module:model/SearchSpatialFilter
   * @class
   * @param field {String} geo-point field in the index on which filtering will be performed.
   */
  var exports = function(field) {
    this.field = field;
  };

  /**
   * Constructs a <code>SearchSpatialFilter</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SearchSpatialFilter} obj Optional instance to populate.
   * @return {module:model/SearchSpatialFilter} The populated <code>SearchSpatialFilter</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('field'))
        obj.field = ApiClient.convertToType(data['field'], 'String');
      if (data.hasOwnProperty('byBoundingBox'))
        obj.byBoundingBox = SearchByBoundingBox.constructFromObject(data['byBoundingBox']);
      if (data.hasOwnProperty('byDistance'))
        obj.byDistance = SearchByDistance.constructFromObject(data['byDistance']);
      if (data.hasOwnProperty('byGeoPolygon'))
        obj.byGeoPolygon = SearchByGeoPolygon.constructFromObject(data['byGeoPolygon']);
    }
    return obj;
  }

  /**
   * geo-point field in the index on which filtering will be performed.
   * @member {String} field
   */
  exports.prototype.field = undefined;

  /**
   * @member {module:model/SearchByBoundingBox} byBoundingBox
   */
  exports.prototype.byBoundingBox = undefined;

  /**
   * @member {module:model/SearchByDistance} byDistance
   */
  exports.prototype.byDistance = undefined;

  /**
   * @member {module:model/SearchByGeoPolygon} byGeoPolygon
   */
  exports.prototype.byGeoPolygon = undefined;


  return exports;

}));
