/*
 * self-managed-osdu
 * Rest API Documentation for Self Managed OSDU
 *
 * OpenAPI spec version: 0.11.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.22
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.SelfManagedOsdu) {
      root.SelfManagedOsdu = {};
    }
    root.SelfManagedOsdu.LegalTagProperties = factory(root.SelfManagedOsdu.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The LegalTagProperties model module.
   * @module model/LegalTagProperties
   * @version 0.11.0
   */

  /**
   * Constructs a new <code>LegalTagProperties</code>.
   * LegalTag properties
   * @alias module:model/LegalTagProperties
   * @class
   * @param contractId {String} The Id of the physical contract associated with the data being ingested.
   * @param countryOfOrigin {Array.<String>} The ISO Alpha 2 country code(s) of where the data relates to.
   * @param dataType {String} The type of data being ingested.
   * @param expirationDate {String} The optional expiration date of the contract in the format YYYY-MM-DD
   * @param exportClassification {String} The ECCN value of the data if one applies.
   * @param originator {String} The company who owns the data.
   * @param personalData {String} Whether the data contains any personally identifiable data.
   * @param securityClassification {String} The security classification of the data.
   */
  var exports = function(contractId, countryOfOrigin, dataType, expirationDate, exportClassification, originator, personalData, securityClassification) {
    this.contractId = contractId;
    this.countryOfOrigin = countryOfOrigin;
    this.dataType = dataType;
    this.expirationDate = expirationDate;
    this.exportClassification = exportClassification;
    this.originator = originator;
    this.personalData = personalData;
    this.securityClassification = securityClassification;
  };

  /**
   * Constructs a <code>LegalTagProperties</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/LegalTagProperties} obj Optional instance to populate.
   * @return {module:model/LegalTagProperties} The populated <code>LegalTagProperties</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('contractId'))
        obj.contractId = ApiClient.convertToType(data['contractId'], 'String');
      if (data.hasOwnProperty('countryOfOrigin'))
        obj.countryOfOrigin = ApiClient.convertToType(data['countryOfOrigin'], ['String']);
      if (data.hasOwnProperty('dataType'))
        obj.dataType = ApiClient.convertToType(data['dataType'], 'String');
      if (data.hasOwnProperty('expirationDate'))
        obj.expirationDate = ApiClient.convertToType(data['expirationDate'], 'String');
      if (data.hasOwnProperty('exportClassification'))
        obj.exportClassification = ApiClient.convertToType(data['exportClassification'], 'String');
      if (data.hasOwnProperty('originator'))
        obj.originator = ApiClient.convertToType(data['originator'], 'String');
      if (data.hasOwnProperty('personalData'))
        obj.personalData = ApiClient.convertToType(data['personalData'], 'String');
      if (data.hasOwnProperty('securityClassification'))
        obj.securityClassification = ApiClient.convertToType(data['securityClassification'], 'String');
    }
    return obj;
  }

  /**
   * The Id of the physical contract associated with the data being ingested.
   * @member {String} contractId
   */
  exports.prototype.contractId = undefined;

  /**
   * The ISO Alpha 2 country code(s) of where the data relates to.
   * @member {Array.<String>} countryOfOrigin
   */
  exports.prototype.countryOfOrigin = undefined;

  /**
   * The type of data being ingested.
   * @member {String} dataType
   */
  exports.prototype.dataType = undefined;

  /**
   * The optional expiration date of the contract in the format YYYY-MM-DD
   * @member {String} expirationDate
   */
  exports.prototype.expirationDate = undefined;

  /**
   * The ECCN value of the data if one applies.
   * @member {String} exportClassification
   */
  exports.prototype.exportClassification = undefined;

  /**
   * The company who owns the data.
   * @member {String} originator
   */
  exports.prototype.originator = undefined;

  /**
   * Whether the data contains any personally identifiable data.
   * @member {String} personalData
   */
  exports.prototype.personalData = undefined;

  /**
   * The security classification of the data.
   * @member {String} securityClassification
   */
  exports.prototype.securityClassification = undefined;


  return exports;

}));
