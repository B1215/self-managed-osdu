/*
 * self-managed-osdu
 * Rest API Documentation for Self Managed OSDU
 *
 * OpenAPI spec version: 0.11.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.22
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SchemaIdentity'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SchemaIdentity'));
  } else {
    // Browser globals (root is window)
    if (!root.SelfManagedOsdu) {
      root.SelfManagedOsdu = {};
    }
    root.SelfManagedOsdu.SchemaInfo = factory(root.SelfManagedOsdu.ApiClient, root.SelfManagedOsdu.SchemaIdentity);
  }
}(this, function(ApiClient, SchemaIdentity) {
  'use strict';

  /**
   * The SchemaInfo model module.
   * @module model/SchemaInfo
   * @version 0.11.0
   */

  /**
   * Constructs a new <code>SchemaInfo</code>.
   * Schema info including status, creation and schemaIdentity
   * @alias module:model/SchemaInfo
   * @class
   * @param schemaIdentity {module:model/SchemaIdentity} 
   * @param status {module:model/SchemaInfo.StatusEnum} Schema lifecycle status
   */
  var exports = function(schemaIdentity, status) {
    this.schemaIdentity = schemaIdentity;
    this.status = status;
  };

  /**
   * Constructs a <code>SchemaInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SchemaInfo} obj Optional instance to populate.
   * @return {module:model/SchemaInfo} The populated <code>SchemaInfo</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('createdBy'))
        obj.createdBy = ApiClient.convertToType(data['createdBy'], 'String');
      if (data.hasOwnProperty('dateCreated'))
        obj.dateCreated = ApiClient.convertToType(data['dateCreated'], 'Date');
      if (data.hasOwnProperty('schemaIdentity'))
        obj.schemaIdentity = SchemaIdentity.constructFromObject(data['schemaIdentity']);
      if (data.hasOwnProperty('scope'))
        obj.scope = ApiClient.convertToType(data['scope'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('supersededBy'))
        obj.supersededBy = SchemaIdentity.constructFromObject(data['supersededBy']);
    }
    return obj;
  }

  /**
   * The user who created the schema. This value is taken from API caller token.
   * @member {String} createdBy
   */
  exports.prototype.createdBy = undefined;

  /**
   * The UTC date time of the entity creation
   * @member {Date} dateCreated
   */
  exports.prototype.dateCreated = undefined;

  /**
   * @member {module:model/SchemaIdentity} schemaIdentity
   */
  exports.prototype.schemaIdentity = undefined;

  /**
   * Schema Scope - is it internal or shared. This is a system defined attribute based on partition-id passed.
   * @member {module:model/SchemaInfo.ScopeEnum} scope
   */
  exports.prototype.scope = undefined;

  /**
   * Schema lifecycle status
   * @member {module:model/SchemaInfo.StatusEnum} status
   */
  exports.prototype.status = undefined;

  /**
   * @member {module:model/SchemaIdentity} supersededBy
   */
  exports.prototype.supersededBy = undefined;



  /**
   * Allowed values for the <code>scope</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScopeEnum = {
    /**
     * value: "INTERNAL"
     * @const
     */
    INTERNAL: "INTERNAL",

    /**
     * value: "SHARED"
     * @const
     */
    SHARED: "SHARED"
  };


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "PUBLISHED"
     * @const
     */
    PUBLISHED: "PUBLISHED",

    /**
     * value: "OBSOLETE"
     * @const
     */
    OBSOLETE: "OBSOLETE",

    /**
     * value: "DEVELOPMENT"
     * @const
     */
    DEVELOPMENT: "DEVELOPMENT"
  };

  return exports;

}));
