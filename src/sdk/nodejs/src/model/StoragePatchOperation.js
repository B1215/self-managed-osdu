/*
 * self-managed-osdu
 * Rest API Documentation for Self Managed OSDU
 *
 * OpenAPI spec version: 0.11.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.SelfManagedOsdu) {
      root.SelfManagedOsdu = {};
    }
    root.SelfManagedOsdu.StoragePatchOperation = factory(root.SelfManagedOsdu.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The StoragePatchOperation model module.
   * @module model/StoragePatchOperation
   * @version 0.11.0
   */

  /**
   * Constructs a new <code>StoragePatchOperation</code>.
   * Patch api operation specific information
   * @alias module:model/StoragePatchOperation
   * @class
   * @param op {module:model/StoragePatchOperation.OpEnum} Type of patch operation
   * @param path {String} Path for batch operation
   * @param value {Array.<String>} Path for batch operation
   */
  var exports = function(op, path, value) {
    this.op = op;
    this.path = path;
    this.value = value;
  };

  /**
   * Constructs a <code>StoragePatchOperation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/StoragePatchOperation} obj Optional instance to populate.
   * @return {module:model/StoragePatchOperation} The populated <code>StoragePatchOperation</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('op'))
        obj.op = ApiClient.convertToType(data['op'], 'String');
      if (data.hasOwnProperty('path'))
        obj.path = ApiClient.convertToType(data['path'], 'String');
      if (data.hasOwnProperty('value'))
        obj.value = ApiClient.convertToType(data['value'], ['String']);
    }
    return obj;
  }

  /**
   * Type of patch operation
   * @member {module:model/StoragePatchOperation.OpEnum} op
   */
  exports.prototype.op = undefined;

  /**
   * Path for batch operation
   * @member {String} path
   */
  exports.prototype.path = undefined;

  /**
   * Path for batch operation
   * @member {Array.<String>} value
   */
  exports.prototype.value = undefined;



  /**
   * Allowed values for the <code>op</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OpEnum = {
    /**
     * value: "add"
     * @const
     */
    add: "add",

    /**
     * value: "replace"
     * @const
     */
    replace: "replace",

    /**
     * value: "remove"
     * @const
     */
    remove: "remove"
  };

  return exports;

}));
