/*
 * self-managed-osdu
 * Rest API Documentation for Self Managed OSDU
 *
 * OpenAPI spec version: 0.11.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.22
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/EntitlementGroupProperties', 'model/EntitlementGroupResponse', 'model/EntitlementMemberDto', 'model/FileAcl', 'model/FileAncestry', 'model/FileApplicationError', 'model/FileDeliveryGetFileSignedURLRequest', 'model/FileDeliveryGetFileSignedURLResponse', 'model/FileDetails', 'model/FileDownloadResponse', 'model/FileError', 'model/FileErrorModel', 'model/FileExtensionProperties', 'model/FileID', 'model/FileLandingZoneLocationResponse', 'model/FileLegal', 'model/FileLocationRequest', 'model/FileMetaItem', 'model/FileMetadata', 'model/FileMetadataResponse', 'model/FileRecordVersion', 'model/FileRelationships', 'model/FileSourceLocationResponse', 'model/FileToManyRelationship', 'model/FileToOneRelationship', 'model/Files', 'model/LegalTagDto', 'model/LegalTagDtos', 'model/LegalTagInvalidResponse', 'model/LegalTagInvalidResponseList', 'model/LegalTagProperties', 'model/LegalTagPropertyValues', 'model/LegalTagRequest', 'model/LegalTagUpdateDto', 'model/NotificationResponseEntity', 'model/PartitionDto', 'model/PartitionProperty', 'model/RegisterAcl', 'model/RegisterAction', 'model/RegisterAppError', 'model/RegisterCreateAction', 'model/RegisterCreatedOnEpoch', 'model/RegisterData', 'model/RegisterDdms', 'model/RegisterDdmsInterface', 'model/RegisterFilter', 'model/RegisterGetSubscriptionResult', 'model/RegisterLegal', 'model/RegisterRecord', 'model/RegisterSecret', 'model/RegisterSubscription', 'model/RegisterSubscriptionCreateResult', 'model/RegisterTestAction', 'model/RegisterTestActionResult', 'model/RegisterTopic', 'model/RegisterTopicExample', 'model/SchemaError', 'model/SchemaErrorModel', 'model/SchemaErrorResponseFormat', 'model/SchemaIdentity', 'model/SchemaInfo', 'model/SchemaInfoResponse', 'model/SchemaRequest', 'model/SearchAppError', 'model/SearchByBoundingBox', 'model/SearchByDistance', 'model/SearchByGeoPolygon', 'model/SearchCursorQueryRequest', 'model/SearchCursorQueryResponse', 'model/SearchPoint', 'model/SearchQueryRequest', 'model/SearchQueryResponse', 'model/SearchSpatialFilter', 'model/StorageAcl', 'model/StorageBulkUpdateRecordsResponse', 'model/StorageDeleteRecordError', 'model/StorageErrorResponse', 'model/StorageLegal', 'model/StorageMultiRecordIds', 'model/StoragePatchOperation', 'model/StorageQueryResponse', 'model/StorageRecord', 'model/StorageRecordBulkUpdateParam', 'model/StorageRecordData', 'model/StorageRecordHistory', 'model/StorageRecordQuery', 'model/StorageRecordVersions', 'model/Workflow', 'model/WorkflowError', 'model/WorkflowErrorDetails', 'model/WorkflowRun', 'model/WorkflowTriggerRequest', 'api/DeliveryAPIApi', 'api/EntitlementApi', 'api/FileServiceApi', 'api/LegalApi', 'api/NotificationApi', 'api/PartitionApi', 'api/RegisterApi', 'api/SchemaApi', 'api/SearchApi', 'api/StorageApi', 'api/WorkflowApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/EntitlementGroupProperties'), require('./model/EntitlementGroupResponse'), require('./model/EntitlementMemberDto'), require('./model/FileAcl'), require('./model/FileAncestry'), require('./model/FileApplicationError'), require('./model/FileDeliveryGetFileSignedURLRequest'), require('./model/FileDeliveryGetFileSignedURLResponse'), require('./model/FileDetails'), require('./model/FileDownloadResponse'), require('./model/FileError'), require('./model/FileErrorModel'), require('./model/FileExtensionProperties'), require('./model/FileID'), require('./model/FileLandingZoneLocationResponse'), require('./model/FileLegal'), require('./model/FileLocationRequest'), require('./model/FileMetaItem'), require('./model/FileMetadata'), require('./model/FileMetadataResponse'), require('./model/FileRecordVersion'), require('./model/FileRelationships'), require('./model/FileSourceLocationResponse'), require('./model/FileToManyRelationship'), require('./model/FileToOneRelationship'), require('./model/Files'), require('./model/LegalTagDto'), require('./model/LegalTagDtos'), require('./model/LegalTagInvalidResponse'), require('./model/LegalTagInvalidResponseList'), require('./model/LegalTagProperties'), require('./model/LegalTagPropertyValues'), require('./model/LegalTagRequest'), require('./model/LegalTagUpdateDto'), require('./model/NotificationResponseEntity'), require('./model/PartitionDto'), require('./model/PartitionProperty'), require('./model/RegisterAcl'), require('./model/RegisterAction'), require('./model/RegisterAppError'), require('./model/RegisterCreateAction'), require('./model/RegisterCreatedOnEpoch'), require('./model/RegisterData'), require('./model/RegisterDdms'), require('./model/RegisterDdmsInterface'), require('./model/RegisterFilter'), require('./model/RegisterGetSubscriptionResult'), require('./model/RegisterLegal'), require('./model/RegisterRecord'), require('./model/RegisterSecret'), require('./model/RegisterSubscription'), require('./model/RegisterSubscriptionCreateResult'), require('./model/RegisterTestAction'), require('./model/RegisterTestActionResult'), require('./model/RegisterTopic'), require('./model/RegisterTopicExample'), require('./model/SchemaError'), require('./model/SchemaErrorModel'), require('./model/SchemaErrorResponseFormat'), require('./model/SchemaIdentity'), require('./model/SchemaInfo'), require('./model/SchemaInfoResponse'), require('./model/SchemaRequest'), require('./model/SearchAppError'), require('./model/SearchByBoundingBox'), require('./model/SearchByDistance'), require('./model/SearchByGeoPolygon'), require('./model/SearchCursorQueryRequest'), require('./model/SearchCursorQueryResponse'), require('./model/SearchPoint'), require('./model/SearchQueryRequest'), require('./model/SearchQueryResponse'), require('./model/SearchSpatialFilter'), require('./model/StorageAcl'), require('./model/StorageBulkUpdateRecordsResponse'), require('./model/StorageDeleteRecordError'), require('./model/StorageErrorResponse'), require('./model/StorageLegal'), require('./model/StorageMultiRecordIds'), require('./model/StoragePatchOperation'), require('./model/StorageQueryResponse'), require('./model/StorageRecord'), require('./model/StorageRecordBulkUpdateParam'), require('./model/StorageRecordData'), require('./model/StorageRecordHistory'), require('./model/StorageRecordQuery'), require('./model/StorageRecordVersions'), require('./model/Workflow'), require('./model/WorkflowError'), require('./model/WorkflowErrorDetails'), require('./model/WorkflowRun'), require('./model/WorkflowTriggerRequest'), require('./api/DeliveryAPIApi'), require('./api/EntitlementApi'), require('./api/FileServiceApi'), require('./api/LegalApi'), require('./api/NotificationApi'), require('./api/PartitionApi'), require('./api/RegisterApi'), require('./api/SchemaApi'), require('./api/SearchApi'), require('./api/StorageApi'), require('./api/WorkflowApi'));
  }
}(function(ApiClient, EntitlementGroupProperties, EntitlementGroupResponse, EntitlementMemberDto, FileAcl, FileAncestry, FileApplicationError, FileDeliveryGetFileSignedURLRequest, FileDeliveryGetFileSignedURLResponse, FileDetails, FileDownloadResponse, FileError, FileErrorModel, FileExtensionProperties, FileID, FileLandingZoneLocationResponse, FileLegal, FileLocationRequest, FileMetaItem, FileMetadata, FileMetadataResponse, FileRecordVersion, FileRelationships, FileSourceLocationResponse, FileToManyRelationship, FileToOneRelationship, Files, LegalTagDto, LegalTagDtos, LegalTagInvalidResponse, LegalTagInvalidResponseList, LegalTagProperties, LegalTagPropertyValues, LegalTagRequest, LegalTagUpdateDto, NotificationResponseEntity, PartitionDto, PartitionProperty, RegisterAcl, RegisterAction, RegisterAppError, RegisterCreateAction, RegisterCreatedOnEpoch, RegisterData, RegisterDdms, RegisterDdmsInterface, RegisterFilter, RegisterGetSubscriptionResult, RegisterLegal, RegisterRecord, RegisterSecret, RegisterSubscription, RegisterSubscriptionCreateResult, RegisterTestAction, RegisterTestActionResult, RegisterTopic, RegisterTopicExample, SchemaError, SchemaErrorModel, SchemaErrorResponseFormat, SchemaIdentity, SchemaInfo, SchemaInfoResponse, SchemaRequest, SearchAppError, SearchByBoundingBox, SearchByDistance, SearchByGeoPolygon, SearchCursorQueryRequest, SearchCursorQueryResponse, SearchPoint, SearchQueryRequest, SearchQueryResponse, SearchSpatialFilter, StorageAcl, StorageBulkUpdateRecordsResponse, StorageDeleteRecordError, StorageErrorResponse, StorageLegal, StorageMultiRecordIds, StoragePatchOperation, StorageQueryResponse, StorageRecord, StorageRecordBulkUpdateParam, StorageRecordData, StorageRecordHistory, StorageRecordQuery, StorageRecordVersions, Workflow, WorkflowError, WorkflowErrorDetails, WorkflowRun, WorkflowTriggerRequest, DeliveryAPIApi, EntitlementApi, FileServiceApi, LegalApi, NotificationApi, PartitionApi, RegisterApi, SchemaApi, SearchApi, StorageApi, WorkflowApi) {
  'use strict';

  /**
   * Rest_API_Documentation_for_Self_Managed_OSDU.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var SelfManagedOsdu = require('index'); // See note below*.
   * var xxxSvc = new SelfManagedOsdu.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new SelfManagedOsdu.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new SelfManagedOsdu.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new SelfManagedOsdu.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.11.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The EntitlementGroupProperties model constructor.
     * @property {module:model/EntitlementGroupProperties}
     */
    EntitlementGroupProperties: EntitlementGroupProperties,
    /**
     * The EntitlementGroupResponse model constructor.
     * @property {module:model/EntitlementGroupResponse}
     */
    EntitlementGroupResponse: EntitlementGroupResponse,
    /**
     * The EntitlementMemberDto model constructor.
     * @property {module:model/EntitlementMemberDto}
     */
    EntitlementMemberDto: EntitlementMemberDto,
    /**
     * The FileAcl model constructor.
     * @property {module:model/FileAcl}
     */
    FileAcl: FileAcl,
    /**
     * The FileAncestry model constructor.
     * @property {module:model/FileAncestry}
     */
    FileAncestry: FileAncestry,
    /**
     * The FileApplicationError model constructor.
     * @property {module:model/FileApplicationError}
     */
    FileApplicationError: FileApplicationError,
    /**
     * The FileDeliveryGetFileSignedURLRequest model constructor.
     * @property {module:model/FileDeliveryGetFileSignedURLRequest}
     */
    FileDeliveryGetFileSignedURLRequest: FileDeliveryGetFileSignedURLRequest,
    /**
     * The FileDeliveryGetFileSignedURLResponse model constructor.
     * @property {module:model/FileDeliveryGetFileSignedURLResponse}
     */
    FileDeliveryGetFileSignedURLResponse: FileDeliveryGetFileSignedURLResponse,
    /**
     * The FileDetails model constructor.
     * @property {module:model/FileDetails}
     */
    FileDetails: FileDetails,
    /**
     * The FileDownloadResponse model constructor.
     * @property {module:model/FileDownloadResponse}
     */
    FileDownloadResponse: FileDownloadResponse,
    /**
     * The FileError model constructor.
     * @property {module:model/FileError}
     */
    FileError: FileError,
    /**
     * The FileErrorModel model constructor.
     * @property {module:model/FileErrorModel}
     */
    FileErrorModel: FileErrorModel,
    /**
     * The FileExtensionProperties model constructor.
     * @property {module:model/FileExtensionProperties}
     */
    FileExtensionProperties: FileExtensionProperties,
    /**
     * The FileID model constructor.
     * @property {module:model/FileID}
     */
    FileID: FileID,
    /**
     * The FileLandingZoneLocationResponse model constructor.
     * @property {module:model/FileLandingZoneLocationResponse}
     */
    FileLandingZoneLocationResponse: FileLandingZoneLocationResponse,
    /**
     * The FileLegal model constructor.
     * @property {module:model/FileLegal}
     */
    FileLegal: FileLegal,
    /**
     * The FileLocationRequest model constructor.
     * @property {module:model/FileLocationRequest}
     */
    FileLocationRequest: FileLocationRequest,
    /**
     * The FileMetaItem model constructor.
     * @property {module:model/FileMetaItem}
     */
    FileMetaItem: FileMetaItem,
    /**
     * The FileMetadata model constructor.
     * @property {module:model/FileMetadata}
     */
    FileMetadata: FileMetadata,
    /**
     * The FileMetadataResponse model constructor.
     * @property {module:model/FileMetadataResponse}
     */
    FileMetadataResponse: FileMetadataResponse,
    /**
     * The FileRecordVersion model constructor.
     * @property {module:model/FileRecordVersion}
     */
    FileRecordVersion: FileRecordVersion,
    /**
     * The FileRelationships model constructor.
     * @property {module:model/FileRelationships}
     */
    FileRelationships: FileRelationships,
    /**
     * The FileSourceLocationResponse model constructor.
     * @property {module:model/FileSourceLocationResponse}
     */
    FileSourceLocationResponse: FileSourceLocationResponse,
    /**
     * The FileToManyRelationship model constructor.
     * @property {module:model/FileToManyRelationship}
     */
    FileToManyRelationship: FileToManyRelationship,
    /**
     * The FileToOneRelationship model constructor.
     * @property {module:model/FileToOneRelationship}
     */
    FileToOneRelationship: FileToOneRelationship,
    /**
     * The Files model constructor.
     * @property {module:model/Files}
     */
    Files: Files,
    /**
     * The LegalTagDto model constructor.
     * @property {module:model/LegalTagDto}
     */
    LegalTagDto: LegalTagDto,
    /**
     * The LegalTagDtos model constructor.
     * @property {module:model/LegalTagDtos}
     */
    LegalTagDtos: LegalTagDtos,
    /**
     * The LegalTagInvalidResponse model constructor.
     * @property {module:model/LegalTagInvalidResponse}
     */
    LegalTagInvalidResponse: LegalTagInvalidResponse,
    /**
     * The LegalTagInvalidResponseList model constructor.
     * @property {module:model/LegalTagInvalidResponseList}
     */
    LegalTagInvalidResponseList: LegalTagInvalidResponseList,
    /**
     * The LegalTagProperties model constructor.
     * @property {module:model/LegalTagProperties}
     */
    LegalTagProperties: LegalTagProperties,
    /**
     * The LegalTagPropertyValues model constructor.
     * @property {module:model/LegalTagPropertyValues}
     */
    LegalTagPropertyValues: LegalTagPropertyValues,
    /**
     * The LegalTagRequest model constructor.
     * @property {module:model/LegalTagRequest}
     */
    LegalTagRequest: LegalTagRequest,
    /**
     * The LegalTagUpdateDto model constructor.
     * @property {module:model/LegalTagUpdateDto}
     */
    LegalTagUpdateDto: LegalTagUpdateDto,
    /**
     * The NotificationResponseEntity model constructor.
     * @property {module:model/NotificationResponseEntity}
     */
    NotificationResponseEntity: NotificationResponseEntity,
    /**
     * The PartitionDto model constructor.
     * @property {module:model/PartitionDto}
     */
    PartitionDto: PartitionDto,
    /**
     * The PartitionProperty model constructor.
     * @property {module:model/PartitionProperty}
     */
    PartitionProperty: PartitionProperty,
    /**
     * The RegisterAcl model constructor.
     * @property {module:model/RegisterAcl}
     */
    RegisterAcl: RegisterAcl,
    /**
     * The RegisterAction model constructor.
     * @property {module:model/RegisterAction}
     */
    RegisterAction: RegisterAction,
    /**
     * The RegisterAppError model constructor.
     * @property {module:model/RegisterAppError}
     */
    RegisterAppError: RegisterAppError,
    /**
     * The RegisterCreateAction model constructor.
     * @property {module:model/RegisterCreateAction}
     */
    RegisterCreateAction: RegisterCreateAction,
    /**
     * The RegisterCreatedOnEpoch model constructor.
     * @property {module:model/RegisterCreatedOnEpoch}
     */
    RegisterCreatedOnEpoch: RegisterCreatedOnEpoch,
    /**
     * The RegisterData model constructor.
     * @property {module:model/RegisterData}
     */
    RegisterData: RegisterData,
    /**
     * The RegisterDdms model constructor.
     * @property {module:model/RegisterDdms}
     */
    RegisterDdms: RegisterDdms,
    /**
     * The RegisterDdmsInterface model constructor.
     * @property {module:model/RegisterDdmsInterface}
     */
    RegisterDdmsInterface: RegisterDdmsInterface,
    /**
     * The RegisterFilter model constructor.
     * @property {module:model/RegisterFilter}
     */
    RegisterFilter: RegisterFilter,
    /**
     * The RegisterGetSubscriptionResult model constructor.
     * @property {module:model/RegisterGetSubscriptionResult}
     */
    RegisterGetSubscriptionResult: RegisterGetSubscriptionResult,
    /**
     * The RegisterLegal model constructor.
     * @property {module:model/RegisterLegal}
     */
    RegisterLegal: RegisterLegal,
    /**
     * The RegisterRecord model constructor.
     * @property {module:model/RegisterRecord}
     */
    RegisterRecord: RegisterRecord,
    /**
     * The RegisterSecret model constructor.
     * @property {module:model/RegisterSecret}
     */
    RegisterSecret: RegisterSecret,
    /**
     * The RegisterSubscription model constructor.
     * @property {module:model/RegisterSubscription}
     */
    RegisterSubscription: RegisterSubscription,
    /**
     * The RegisterSubscriptionCreateResult model constructor.
     * @property {module:model/RegisterSubscriptionCreateResult}
     */
    RegisterSubscriptionCreateResult: RegisterSubscriptionCreateResult,
    /**
     * The RegisterTestAction model constructor.
     * @property {module:model/RegisterTestAction}
     */
    RegisterTestAction: RegisterTestAction,
    /**
     * The RegisterTestActionResult model constructor.
     * @property {module:model/RegisterTestActionResult}
     */
    RegisterTestActionResult: RegisterTestActionResult,
    /**
     * The RegisterTopic model constructor.
     * @property {module:model/RegisterTopic}
     */
    RegisterTopic: RegisterTopic,
    /**
     * The RegisterTopicExample model constructor.
     * @property {module:model/RegisterTopicExample}
     */
    RegisterTopicExample: RegisterTopicExample,
    /**
     * The SchemaError model constructor.
     * @property {module:model/SchemaError}
     */
    SchemaError: SchemaError,
    /**
     * The SchemaErrorModel model constructor.
     * @property {module:model/SchemaErrorModel}
     */
    SchemaErrorModel: SchemaErrorModel,
    /**
     * The SchemaErrorResponseFormat model constructor.
     * @property {module:model/SchemaErrorResponseFormat}
     */
    SchemaErrorResponseFormat: SchemaErrorResponseFormat,
    /**
     * The SchemaIdentity model constructor.
     * @property {module:model/SchemaIdentity}
     */
    SchemaIdentity: SchemaIdentity,
    /**
     * The SchemaInfo model constructor.
     * @property {module:model/SchemaInfo}
     */
    SchemaInfo: SchemaInfo,
    /**
     * The SchemaInfoResponse model constructor.
     * @property {module:model/SchemaInfoResponse}
     */
    SchemaInfoResponse: SchemaInfoResponse,
    /**
     * The SchemaRequest model constructor.
     * @property {module:model/SchemaRequest}
     */
    SchemaRequest: SchemaRequest,
    /**
     * The SearchAppError model constructor.
     * @property {module:model/SearchAppError}
     */
    SearchAppError: SearchAppError,
    /**
     * The SearchByBoundingBox model constructor.
     * @property {module:model/SearchByBoundingBox}
     */
    SearchByBoundingBox: SearchByBoundingBox,
    /**
     * The SearchByDistance model constructor.
     * @property {module:model/SearchByDistance}
     */
    SearchByDistance: SearchByDistance,
    /**
     * The SearchByGeoPolygon model constructor.
     * @property {module:model/SearchByGeoPolygon}
     */
    SearchByGeoPolygon: SearchByGeoPolygon,
    /**
     * The SearchCursorQueryRequest model constructor.
     * @property {module:model/SearchCursorQueryRequest}
     */
    SearchCursorQueryRequest: SearchCursorQueryRequest,
    /**
     * The SearchCursorQueryResponse model constructor.
     * @property {module:model/SearchCursorQueryResponse}
     */
    SearchCursorQueryResponse: SearchCursorQueryResponse,
    /**
     * The SearchPoint model constructor.
     * @property {module:model/SearchPoint}
     */
    SearchPoint: SearchPoint,
    /**
     * The SearchQueryRequest model constructor.
     * @property {module:model/SearchQueryRequest}
     */
    SearchQueryRequest: SearchQueryRequest,
    /**
     * The SearchQueryResponse model constructor.
     * @property {module:model/SearchQueryResponse}
     */
    SearchQueryResponse: SearchQueryResponse,
    /**
     * The SearchSpatialFilter model constructor.
     * @property {module:model/SearchSpatialFilter}
     */
    SearchSpatialFilter: SearchSpatialFilter,
    /**
     * The StorageAcl model constructor.
     * @property {module:model/StorageAcl}
     */
    StorageAcl: StorageAcl,
    /**
     * The StorageBulkUpdateRecordsResponse model constructor.
     * @property {module:model/StorageBulkUpdateRecordsResponse}
     */
    StorageBulkUpdateRecordsResponse: StorageBulkUpdateRecordsResponse,
    /**
     * The StorageDeleteRecordError model constructor.
     * @property {module:model/StorageDeleteRecordError}
     */
    StorageDeleteRecordError: StorageDeleteRecordError,
    /**
     * The StorageErrorResponse model constructor.
     * @property {module:model/StorageErrorResponse}
     */
    StorageErrorResponse: StorageErrorResponse,
    /**
     * The StorageLegal model constructor.
     * @property {module:model/StorageLegal}
     */
    StorageLegal: StorageLegal,
    /**
     * The StorageMultiRecordIds model constructor.
     * @property {module:model/StorageMultiRecordIds}
     */
    StorageMultiRecordIds: StorageMultiRecordIds,
    /**
     * The StoragePatchOperation model constructor.
     * @property {module:model/StoragePatchOperation}
     */
    StoragePatchOperation: StoragePatchOperation,
    /**
     * The StorageQueryResponse model constructor.
     * @property {module:model/StorageQueryResponse}
     */
    StorageQueryResponse: StorageQueryResponse,
    /**
     * The StorageRecord model constructor.
     * @property {module:model/StorageRecord}
     */
    StorageRecord: StorageRecord,
    /**
     * The StorageRecordBulkUpdateParam model constructor.
     * @property {module:model/StorageRecordBulkUpdateParam}
     */
    StorageRecordBulkUpdateParam: StorageRecordBulkUpdateParam,
    /**
     * The StorageRecordData model constructor.
     * @property {module:model/StorageRecordData}
     */
    StorageRecordData: StorageRecordData,
    /**
     * The StorageRecordHistory model constructor.
     * @property {module:model/StorageRecordHistory}
     */
    StorageRecordHistory: StorageRecordHistory,
    /**
     * The StorageRecordQuery model constructor.
     * @property {module:model/StorageRecordQuery}
     */
    StorageRecordQuery: StorageRecordQuery,
    /**
     * The StorageRecordVersions model constructor.
     * @property {module:model/StorageRecordVersions}
     */
    StorageRecordVersions: StorageRecordVersions,
    /**
     * The Workflow model constructor.
     * @property {module:model/Workflow}
     */
    Workflow: Workflow,
    /**
     * The WorkflowError model constructor.
     * @property {module:model/WorkflowError}
     */
    WorkflowError: WorkflowError,
    /**
     * The WorkflowErrorDetails model constructor.
     * @property {module:model/WorkflowErrorDetails}
     */
    WorkflowErrorDetails: WorkflowErrorDetails,
    /**
     * The WorkflowRun model constructor.
     * @property {module:model/WorkflowRun}
     */
    WorkflowRun: WorkflowRun,
    /**
     * The WorkflowTriggerRequest model constructor.
     * @property {module:model/WorkflowTriggerRequest}
     */
    WorkflowTriggerRequest: WorkflowTriggerRequest,
    /**
     * The DeliveryAPIApi service constructor.
     * @property {module:api/DeliveryAPIApi}
     */
    DeliveryAPIApi: DeliveryAPIApi,
    /**
     * The EntitlementApi service constructor.
     * @property {module:api/EntitlementApi}
     */
    EntitlementApi: EntitlementApi,
    /**
     * The FileServiceApi service constructor.
     * @property {module:api/FileServiceApi}
     */
    FileServiceApi: FileServiceApi,
    /**
     * The LegalApi service constructor.
     * @property {module:api/LegalApi}
     */
    LegalApi: LegalApi,
    /**
     * The NotificationApi service constructor.
     * @property {module:api/NotificationApi}
     */
    NotificationApi: NotificationApi,
    /**
     * The PartitionApi service constructor.
     * @property {module:api/PartitionApi}
     */
    PartitionApi: PartitionApi,
    /**
     * The RegisterApi service constructor.
     * @property {module:api/RegisterApi}
     */
    RegisterApi: RegisterApi,
    /**
     * The SchemaApi service constructor.
     * @property {module:api/SchemaApi}
     */
    SchemaApi: SchemaApi,
    /**
     * The SearchApi service constructor.
     * @property {module:api/SearchApi}
     */
    SearchApi: SearchApi,
    /**
     * The StorageApi service constructor.
     * @property {module:api/StorageApi}
     */
    StorageApi: StorageApi,
    /**
     * The WorkflowApi service constructor.
     * @property {module:api/WorkflowApi}
     */
    WorkflowApi: WorkflowApi
  };

  return exports;
}));
