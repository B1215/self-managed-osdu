/*
 * self-managed-osdu
 * Rest API Documentation for Self Managed OSDU
 *
 * OpenAPI spec version: 0.11.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.22
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SelfManagedOsdu);
  }
}(this, function(expect, SelfManagedOsdu) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('SearchCursorQueryRequest', function() {
      beforeEach(function() {
        instance = new SelfManagedOsdu.SearchCursorQueryRequest();
      });

      it('should create an instance of SearchCursorQueryRequest', function() {
        // TODO: update the code to test SearchCursorQueryRequest
        expect(instance).to.be.a(SelfManagedOsdu.SearchCursorQueryRequest);
      });

      it('should have the property cursor (base name: "cursor")', function() {
        // TODO: update the code to test the property cursor
        expect(instance).to.have.property('cursor');
        // expect(instance.cursor).to.be(expectedValueLiteral);
      });

      it('should have the property kind (base name: "kind")', function() {
        // TODO: update the code to test the property kind
        expect(instance).to.have.property('kind');
        // expect(instance.kind).to.be(expectedValueLiteral);
      });

      it('should have the property limit (base name: "limit")', function() {
        // TODO: update the code to test the property limit
        expect(instance).to.have.property('limit');
        // expect(instance.limit).to.be(expectedValueLiteral);
      });

      it('should have the property query (base name: "query")', function() {
        // TODO: update the code to test the property query
        expect(instance).to.have.property('query');
        // expect(instance.query).to.be(expectedValueLiteral);
      });

      it('should have the property spatialFilter (base name: "spatialFilter")', function() {
        // TODO: update the code to test the property spatialFilter
        expect(instance).to.have.property('spatialFilter');
        // expect(instance.spatialFilter).to.be(expectedValueLiteral);
      });

      it('should have the property returnedFields (base name: "returnedFields")', function() {
        // TODO: update the code to test the property returnedFields
        expect(instance).to.have.property('returnedFields');
        // expect(instance.returnedFields).to.be(expectedValueLiteral);
      });

    });
  });

}));
