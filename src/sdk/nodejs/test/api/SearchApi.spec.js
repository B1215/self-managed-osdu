/*
 * self-managed-osdu
 * Rest API Documentation for Self Managed OSDU
 *
 * OpenAPI spec version: 0.11.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.22
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SelfManagedOsdu);
  }
}(this, function(expect, SelfManagedOsdu) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SelfManagedOsdu.SearchApi();
  });

  describe('(package)', function() {
    describe('SearchApi', function() {
      describe('deleteIndex', function() {
        it('should call deleteIndex successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteIndex call
          /*
          var oSDUAccountId = "oSDUAccountId_example";
          var kind = "kind_example";
          var opts = {};
          opts.oSDUOnBehalfOf = "oSDUOnBehalfOf_example";

          instance.deleteIndex(oSDUAccountId, kind, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getKindSchema', function() {
        it('should call getKindSchema successfully', function(done) {
          // TODO: uncomment, update parameter values for getKindSchema call and complete the assertions
          /*
          var oSDUAccountId = "oSDUAccountId_example";
          var kind = "kind_example";
          var opts = {};
          opts.oSDUOnBehalfOf = "oSDUOnBehalfOf_example";

          instance.getKindSchema(oSDUAccountId, kind, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a('string');
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('queryRecords', function() {
        it('should call queryRecords successfully', function(done) {
          // TODO: uncomment, update parameter values for queryRecords call and complete the assertions
          /*
          var oSDUAccountId = "oSDUAccountId_example";
          var body = new SelfManagedOsdu.SearchQueryRequest();
          body.offset = 0;
          body.kind = "";
          body.limit = 0;
          body.query = "";
          body.spatialFilter = new SelfManagedOsdu.SearchSpatialFilter();
          body.spatialFilter.field = "";
          body.spatialFilter.byBoundingBox = new SelfManagedOsdu.SearchByBoundingBox();
          body.spatialFilter.byBoundingBox.topLeft = new SelfManagedOsdu.SearchPoint();
          body.spatialFilter.byBoundingBox.topLeft.latitude = 0.0;
          body.spatialFilter.byBoundingBox.topLeft.longitude = 0.0;
          body.spatialFilter.byBoundingBox.bottomRight = new SelfManagedOsdu.SearchPoint();
          body.spatialFilter.byBoundingBox.bottomRight.latitude = 0.0;
          body.spatialFilter.byBoundingBox.bottomRight.longitude = 0.0;
          body.spatialFilter.byDistance = new SelfManagedOsdu.SearchByDistance();
          body.spatialFilter.byDistance.distance = 0.0;
          body.spatialFilter.byDistance.point = new SelfManagedOsdu.SearchPoint();
          body.spatialFilter.byDistance.point.latitude = 0.0;
          body.spatialFilter.byDistance.point.longitude = 0.0;
          body.spatialFilter.byGeoPolygon = new SelfManagedOsdu.SearchByGeoPolygon();
          body.returnedFields = [""];
          var opts = {};
          opts.oSDUOnBehalfOf = "oSDUOnBehalfOf_example";

          instance.queryRecords(oSDUAccountId, body, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SelfManagedOsdu.SearchQueryResponse);
            {
              let dataCtr = data.results;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Object);
                expect(data).to.be({key: });
              }
            }
            expect(data.totalCount).to.be.a('number');
            expect(data.totalCount).to.be("0");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('queryWithCursor', function() {
        it('should call queryWithCursor successfully', function(done) {
          // TODO: uncomment, update parameter values for queryWithCursor call and complete the assertions
          /*
          var oSDUAccountId = "oSDUAccountId_example";
          var body = new SelfManagedOsdu.SearchCursorQueryRequest();
          body.cursor = "";
          body.kind = "";
          body.limit = 0;
          body.query = "";
          body.spatialFilter = new SelfManagedOsdu.SearchSpatialFilter();
          body.spatialFilter.field = "";
          body.spatialFilter.byBoundingBox = new SelfManagedOsdu.SearchByBoundingBox();
          body.spatialFilter.byBoundingBox.topLeft = new SelfManagedOsdu.SearchPoint();
          body.spatialFilter.byBoundingBox.topLeft.latitude = 0.0;
          body.spatialFilter.byBoundingBox.topLeft.longitude = 0.0;
          body.spatialFilter.byBoundingBox.bottomRight = new SelfManagedOsdu.SearchPoint();
          body.spatialFilter.byBoundingBox.bottomRight.latitude = 0.0;
          body.spatialFilter.byBoundingBox.bottomRight.longitude = 0.0;
          body.spatialFilter.byDistance = new SelfManagedOsdu.SearchByDistance();
          body.spatialFilter.byDistance.distance = 0.0;
          body.spatialFilter.byDistance.point = new SelfManagedOsdu.SearchPoint();
          body.spatialFilter.byDistance.point.latitude = 0.0;
          body.spatialFilter.byDistance.point.longitude = 0.0;
          body.spatialFilter.byGeoPolygon = new SelfManagedOsdu.SearchByGeoPolygon();
          body.returnedFields = [""];
          var opts = {};
          opts.oSDUOnBehalfOf = "oSDUOnBehalfOf_example";

          instance.queryWithCursor(oSDUAccountId, body, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SelfManagedOsdu.SearchCursorQueryResponse);
            expect(data.cursor).to.be.a('string');
            expect(data.cursor).to.be("");
            {
              let dataCtr = data.results;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Object);
                expect(data).to.be({key: });
              }
            }
            expect(data.totalCount).to.be.a('number');
            expect(data.totalCount).to.be("0");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
