name: '1. Generate Secrets'

on:
  workflow_dispatch:

env:
  AZURE_PRINCIPAL_NAME: osdu-azure-credentials
  OSDU_PRINCIPAL_NAME: osdu-credentials
  OSDU_APPLICATION_NAME: osdu-application

jobs:

  generator:
    runs-on: ubuntu-latest

    steps:

      - name: Generate Random Value
        id: rand
        run: |
          RANDOM_VALUE=$(echo $RANDOM | tr '[0-9]' '[a-z]')
          echo "random_value=$RANDOM_VALUE" >> $GITHUB_ENV

      - name: Generate SSH Key
        id: sshkey
        run: |
          PASSPHRASE=$(echo $((RANDOM%20000000000000000000+100000000000000000000)))
          if [ -f id_rsa ]; then rm id_rsa && id_rsa.pub; fi
          ssh-keygen -q -t rsa -b 2048 -f id_rsa -N $PASSPHRASE

      - name: Read private key
        id: privatekey
        uses: juliangruber/read-file-action@v1
        with:
          path: ./id_rsa

      - name: Read public key
        id: publickey
        uses: juliangruber/read-file-action@v1
        with:
          path: ./id_rsa.pub

      - name: Save Private Key as Secret
        uses: gliech/create-github-secret-action@v1
        with:
          name: SSH_PUBLIC_KEY
          value: ${{ steps.privatekey.outputs.content }}
          pa_token: ${{ secrets.GH_REPO_TOKEN }}

      - name:  Save Public Key  as Secret
        uses: gliech/create-github-secret-action@v1
        with:
          name: SSH_PRIVATE_KEY
          value: ${{ steps.publickey.outputs.content }}
          pa_token: ${{ secrets.GH_REPO_TOKEN }}

      - name: Save Random Value as Secret
        uses: gliech/create-github-secret-action@v1
        with:
          name: RAND
          value: ${{ env.random_value }}
          pa_token: ${{ secrets.GH_REPO_TOKEN }}
