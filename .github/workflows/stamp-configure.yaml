name: '4. Stamp Configure'

on:
  workflow_dispatch:

env:
  OSDU_VERSION: v0.11.0
  CLUSTER: osdu-stamp

jobs:

  flux-setup:
    name: Gitops Configuration
    env:
      GITHUB_TOKEN: ${{ secrets.GH_REPO_TOKEN }}

    runs-on: ubuntu-latest
    steps:

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Environment Settings
        uses: Azure/cli@1.0.4
        with:
          inlineScript: |
            GROUP=$(az group list --query "[?contains(name, 'dpl${{ secrets.RAND }}')].name" -otsv |grep -v MC)
            ENV_CLUSTER=$(az aks list --resource-group $GROUP --query [].name -otsv)
            echo "CLUSTER_RESOURCE_GROUP=$GROUP" >> $GITHUB_ENV
            echo "CLUSTER_NAME=$ENV_CLUSTER" >> $GITHUB_ENV

      - name: AKS Context
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

      - name: Install Flux
        run: curl -s https://fluxcd.io/install.sh | bash;

      - name: Bootstrap Flux
        run: flux bootstrap github --owner=${{ github.repository_owner }} --repository=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2	) --branch=main --path=./clusters/${{ env.CLUSTER }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Create OSDU Stamp Kustomization
        run: |
          mkdir -p $GITHUB_WORKSPACE/clusters/$CLUSTER
          mkdir -p $GITHUB_WORKSPACE/apps/$CLUSTER/

          flux create source git helm-charts-azure \
            --url https://community.opengroup.org/osdu/platform/deployment-and-operations/helm-charts-azure \
            --interval 1m \
            --branch master \
            --export > $GITHUB_WORKSPACE/clusters/$CLUSTER/helm-charts-azure.yaml

          cat > $GITHUB_WORKSPACE/clusters/$CLUSTER/osdu-stamp.yaml <<EOF
          ---
          apiVersion: kustomize.toolkit.fluxcd.io/v1beta1
          kind: Kustomization
          metadata:
            name: osdu-stamp
            namespace: flux-system
          spec:
            interval: 5m0s
            sourceRef:
              kind: GitRepository
              name: flux-system
            path: ./apps/$CLUSTER/
            prune: true
            validation: client
            healthChecks:
            - kind: Deployment
              name: env-debug
              namespace: dev-sample
            - kind: Deployment
              name: istio-operator
              namespace: istio-system
            - kind: Deployment
              name: istiod
              namespace: istio-system
            - kind: Deployment
              name: istio-ingressgateway
              namespace: istio-system
            - kind: Deployment
              name: partition
              namespace: osdu-azure
            - kind: Deployment
              name: entitlements
              namespace: osdu-azure
            - kind: Deployment
              name: legal
              namespace: osdu-azure
            - kind: Deployment
              name: policy
              namespace: osdu-azure
          EOF

          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/kustomization.yaml << EOF
          ---
          apiVersion: kustomize.config.k8s.io/v1beta1
          kind: Kustomization
          resources:
            - ../base/dev-sample
            - ../base/osdu-base
            - ../base/osdu-istio
            - ../base/osdu-airflow
            - ../base/osdu-azure
          patchesStrategicMerge:
            - dev-sample-values.yaml
            - osdu-istio-values.yaml
            - osdu-airflow-values.yaml
            - partition-services-values.yaml
            - security-services-values.yaml
            - core-services-values.yaml
          EOF


      # - name: sealed-secrets
      #   run: |
      #     cat > $GITHUB_WORKSPACE/clusters/$CLUSTER/sealed-secrets.yaml <<EOF
      #     ---
      #     apiVersion: kustomize.toolkit.fluxcd.io/v1beta1
      #     kind: Kustomization
      #     metadata:
      #       name: sealed-secrets
      #       namespace: flux-system
      #     spec:
      #       interval: 5m0s
      #       sourceRef:
      #         kind: GitRepository
      #         name: self-managed-osdu
      #       path: ./apps/base/sealed-secrets
      #       prune: true
      #       validation: client
      #       healthChecks:
      #         - kind: Deployment
      #           name: sealed-secrets
      #           namespace: kube-system
      #     EOF


      - name: Create OSDU Stamp Values
        run: |
          GROUP=$(az group list --query "[?contains(name, 'ctl${{ secrets.RAND }}')].name" -otsv)
          ENV_VAULT=$(az keyvault list --resource-group $GROUP --query [].name -otsv)
          DP_GROUP=$(az group list --query "[?contains(name, 'dpl${{ secrets.RAND }}')].name" -otsv |grep -v MC)
          DNS_HOST=$(az network public-ip list --resource-group $DP_GROUP --query [].dnsSettings.fqdn -otsv)

          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/dev-sample-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: env-tool
            namespace: dev-sample
          spec:
            values:
              azure:
                tenant: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/tenant-id --query value -otsv)
                subscription: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/subscription-id --query value -otsv)
                resourcegroup: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-rg
                identity: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-osdu-identity
                identity_id: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/osdu-identity-id --query value -otsv)
                keyvault: $ENV_VAULT
                appid: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)
          EOF

          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/osdu-istio-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: osdu-istio
            namespace: istio-system
          spec:
            values:
              global:
                azure:
                  tenant: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/tenant-id --query value -otsv)
                  appid: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)
          EOF

          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/partition-services-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: partition-services
            namespace: osdu-azure
          spec:
            values:
              replicaCount: 2
              azure:
                tenant: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/tenant-id --query value -otsv)
                subscription: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/subscription-id --query value -otsv)
                resourcegroup: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-rg
                identity: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-osdu-identity
                identity_id: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/osdu-identity-id --query value -otsv)
                keyvault: $ENV_VAULT
                appid: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)
              ingress:
                dns: $DNS_HOST
          EOF

          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/security-services-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: security-services
            namespace: osdu-azure
          spec:
            values:
              replicaCount: 2
              azure:
                tenant: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/tenant-id --query value -otsv)
                subscription: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/subscription-id --query value -otsv)
                resourcegroup: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-rg
                identity: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-osdu-identity
                identity_id: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/osdu-identity-id --query value -otsv)
                keyvault: $ENV_VAULT
                appid: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)
              ingress:
                dns: $DNS_HOST
          EOF

          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/core-services-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: core-services
            namespace: osdu-azure
          spec:
            values:
              replicaCount: 2
              azure:
                tenant: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/tenant-id --query value -otsv)
                subscription: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/subscription-id --query value -otsv)
                resourcegroup: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-rg
                identity: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-osdu-identity
                identity_id: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/osdu-identity-id --query value -otsv)
                keyvault: $ENV_VAULT
                appid: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)
              ingress:
                dns: $DNS_HOST
          EOF

          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/osdu-airflow-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: airflow
            namespace: airflow
          spec:
            values:
              azure:
                tenant: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/tenant-id --query value -otsv)
                subscription: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/subscription-id --query value -otsv)
                resourcegroup: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-rg
                identity: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-osdu-identity
                identity_id: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/osdu-identity-id --query value -otsv)
                keyvault: $ENV_VAULT
                appid: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)
              airflowLogin:
                name: admin
              airflow:
                ingress:
                  host: $DNS_HOST
                  web:
                    annotations:
                      cert-manager.io/cluster-issuer: letsencrypt-prod-dns
                    host: $DNS_HOST
                externalDatabase:
                  host: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-sr --query value -otsv)-pg.postgres.database.azure.com
                  user:  osdu_admin@$(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-sr --query value -otsv)-pg
                externalRedis:
                  host: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-sr --query value -otsv)-cache.redis.cache.windows.net
                airflow:
                  extraEnv:
                    - name: AIRFLOW_VAR_AZURE_DNS_HOST
                      value: "$DNS_HOST"
          EOF

      - name: GitOps Commit
        uses: EndBug/add-and-commit@v7
        with:
          message: 'Initialize Software Install'
          add: '.'
