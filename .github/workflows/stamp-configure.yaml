name: '4. Stamp Configure'

on:
  workflow_dispatch:

env:
  OSDU_VERSION: v0.11.0
  CLUSTER: osdu-stamp

jobs:

  flux-setup:
    name: Gitops Configuration
    env:
      GITHUB_TOKEN: ${{ secrets.GH_REPO_TOKEN }}

    runs-on: ubuntu-latest
    steps:

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Environment Settings
        uses: Azure/cli@1.0.4
        with:
          inlineScript: |
            GROUP=$(az group list --query "[?contains(name, 'dpl${{ secrets.RAND }}')].name" -otsv |grep -v MC)
            ENV_CLUSTER=$(az aks list --resource-group $GROUP --query [].name -otsv)
            echo "CLUSTER_RESOURCE_GROUP=$GROUP" >> $GITHUB_ENV
            echo "CLUSTER_NAME=$ENV_CLUSTER" >> $GITHUB_ENV

      - name: AKS Context
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

      - name: Install Flux
        run: curl -s https://fluxcd.io/install.sh | bash;

      - name: Bootstrap Flux
        run: flux bootstrap github --owner=${{ github.repository_owner }} --repository=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2	) --branch=main --path=./clusters/${{ env.CLUSTER }}

      - name: GitOps Checkout
        uses: actions/checkout@v2

      - name: Retrieve Stamp Env Variables
        run: |
          mkdir -p $GITHUB_WORKSPACE/clusters/$CLUSTER
          mkdir -p $GITHUB_WORKSPACE/apps/$CLUSTER/

          GROUP=$(az group list --query "[?contains(name, 'cpl${{ secrets.RAND }}')].name" -otsv)
          ENV_VAULT=$(az keyvault list --resource-group $GROUP --query [].name -otsv)
          DP_GROUP=$(az group list --query "[?contains(name, 'dpl${{ secrets.RAND }}')].name" -otsv |grep -v MC)
          DNS_HOST=$(az network public-ip list --resource-group $DP_GROUP --query [].dnsSettings.fqdn -otsv)

          echo "GROUP=$GROUP" >> $GITHUB_ENV
          echo "ENV_VAULT=$ENV_VAULT" >> $GITHUB_ENV
          echo "DP_GROUP=$DP_GROUP" >> $GITHUB_ENV
          echo "DNS_HOST=$DNS_HOST" >> $GITHUB_ENV

      - name: Configure Sealed Secrets
        run: |
          cat > $GITHUB_WORKSPACE/clusters/$CLUSTER/sealed-secrets.yaml <<EOF
          ---
          apiVersion: kustomize.toolkit.fluxcd.io/v1beta1
          kind: Kustomization
          metadata:
            name: sealed-secrets
            namespace: flux-system
          spec:
            interval: 5m0s
            sourceRef:
              kind: GitRepository
              name: flux-system
            path: ./apps/base/sealed-secrets
            prune: true
            validation: client
            healthChecks:
              - kind: Deployment
                name: sealed-secrets
                namespace: kube-system
          EOF

      - name: Configure OSDU Stamp
        run: |
          flux create source git helm-charts-azure \
            --url https://community.opengroup.org/osdu/platform/deployment-and-operations/helm-charts-azure \
            --interval 1m \
            --branch master \
            --export > $GITHUB_WORKSPACE/clusters/$CLUSTER/helm-charts-azure.yaml

          cat > $GITHUB_WORKSPACE/clusters/$CLUSTER/osdu-stamp.yaml <<EOF
          ---
          apiVersion: kustomize.toolkit.fluxcd.io/v1beta1
          kind: Kustomization
          metadata:
            name: osdu-stamp
            namespace: flux-system
          spec:
            interval: 5m0s
            sourceRef:
              kind: GitRepository
              name: flux-system
            path: ./apps/$CLUSTER/
            prune: true
            validation: client
            healthChecks:
            - kind: Deployment
              name: env-debug
              namespace: dev-sample
            - kind: Deployment
              name: istio-operator
              namespace: istio-operator
            - kind: Deployment
              name: istiod
              namespace: istio-system
            - kind: Deployment
              name: istio-ingressgateway
              namespace: istio-system
            - kind: Deployment
              name: default
              namespace: osdu-azure
            - kind: Deployment
              name: partition
              namespace: osdu-azure
            - kind: Deployment
              name: entitlements
              namespace: osdu-azure
            - kind: Deployment
              name: legal
              namespace: osdu-azure
          EOF

          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/kustomization.yaml << EOF
          ---
          apiVersion: kustomize.config.k8s.io/v1beta1
          kind: Kustomization
          resources:
            - ../base/dev-sample
            - ../base/osdu-base
            - ../base/osdu-istio
            - ../base/osdu-azure
          patchesStrategicMerge:
            - dev-sample-values.yaml
            - osdu-istio-values.yaml
            - self-managed-base-values.yaml
            - default-service-values.yaml
            - partition-service-values.yaml
            - entitlement-service-values.yaml
          EOF

      - name: Create Helm Values - dev-sample
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/dev-sample-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: env-tool
            namespace: dev-sample
          spec:
            values:
              azure:
                tenant: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/tenant-id --query value -otsv)
                subscription: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/subscription-id --query value -otsv)
                resourcegroup: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-rg
                identity: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-osdu-identity
                identity_id: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/osdu-identity-id --query value -otsv)
                keyvault: $ENV_VAULT
                appid: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)
          EOF

      - name: Create Helm Values - osdu-istio
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/osdu-istio-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: osdu-istio
            namespace: istio-system
          spec:
            values:
              global:
                azure:
                  tenant: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/tenant-id --query value -otsv)
                  appid: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)
          EOF

      - name: Create Helm Values - self-managed-base
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/self-managed-base-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: self-managed-base
            namespace: osdu-azure
          spec:
            values:
              fullnameOverride: osdu-svc
              azure:
                tenant: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/tenant-id --query value -otsv)
                subscription: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/subscription-id --query value -otsv)
                resourcegroup: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-rg
                identity: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-osdu-identity
                identity_id: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/osdu-identity-id --query value -otsv)
                keyvault: $ENV_VAULT
                appid: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)
                oidAuthEnabled: false
              resourceLimits:
                defaultCpuRequests: "0.5"
                defaultMemoryRequests: "4Gi"
                defaultCpuLimits: "1"
                defaultMemoryLimits: "4Gi"
              identity:
                name: osdu-identity
          EOF

      - name: Create Helm Values - default-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/default-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: default-service
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: default
                repository: neilpeterson/aks-helloworld
                tag: v1
                path: /*
                replicaCount: 1
                env:
                - name: TITLE
                  value: "Self Managed OSDU - (v0.11)"
          EOF

      - name: Create Helm Values - partition-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/partition-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: partition-service
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: partition
                repository: msosdu.azurecr.io/partition
                tag: oak
                path: /api/partition/v1/*
                probe:
                  path: /actuator/health
                  port: 8081
                  liveness:
                    delay: 250
                    seconds: 10
                keyvault: true
                auth:
                  disable:
                    - "/"
                    - "*/index.html"
                    - "*/v1/api-docs"
                    - "*/configuration/ui"
                    - "*/configuration/security"
                    - "*/swagger"
                    - "*/swagger-ui.html"
                    - "*/swagger-resources"
                    - "/api/partition/v1/swagger-resources/*"
                    - "/api/partition/v1/webjars/*"
                    - "*/actuator/health"
                    - "*/health"
                env:
                - name: spring_application_name
                  value: partition
                - name: server.servlet.contextPath
                  value: /api/partition/v1/
                - name: server_port
                  value: "80"
                - name: ACCEPT_HTTP
                  value: "true"
                - name: partition_spring_logging_level
                  value: INFO
                - name: azure_activedirectory_AppIdUri
                  value: "api://$(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)"
                - name: azure_activedirectory_session_stateless
                  value: "false"
                - name: azure_paas_podIdentity_isEnabled
                  value: "true"
                - name: azure_istioauth_enabled
                  value: "true"
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: REDIS_DATABASE
                  config:
                    name: osdu-svc-config
                    key: REDIS_DB_PARTITION
                - name: appinsights_key
                  secret:
                    name: central-logging
                    key: appinsights
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
          EOF

      - name: Create Helm Values - entitlement-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/entitlement-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: entitlement-service
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: $DNS_HOST
              configuration:
              - service: entitlements
                repository: msosdu.azurecr.io/entitlements
                tag: oak
                path: /api/entitlements/v2/*
                probe:
                  path: /api/entitlements/v2/_ah/readiness_check
                  port: http
                keyvault: true
                request:
                  cpu: 100m
                  memory: 600Mi
                limit:
                  cpu: 1000m
                  memory: 1300Mi
                auth:
                  disable:
                    - "/"
                    - "*/index.html"
                    - "*/v2/api-docs"
                    - "*/swagger-resources"
                    - "*/swagger-ui.html"
                    - "*/actuator/health"
                    - "*/health"
                    - "*/configuration/ui"
                    - "*/configuration/security"
                    - "/api/entitlements/v2/info"
                    - "/api/entitlements/v2/swagger-resources/*"
                    - "/api/entitlements/v2/webjars/*"
                env:
                - name: spring_application_name
                  value: entitlements
                - name: server.servlet.contextPath
                  value: /api/entitlements/v2/
                - name: LOGGING_LEVEL
                  value: INFO
                - name: server_port
                  value: "80"
                - name: service_domain_name
                  value: contoso.com
                - name: root_data_group_quota
                  value: "5000"
                - name: redis_ttl_seconds
                  value: "1"
                - name: partition_service_endpoint
                  value: http://partition/api/partition/v1
                - name: azure_istioauth_enabled
                  value: "true"
                - name: azure_activedirectory_AppIdUri
                  value: "api://$(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)"
                - name: azure_paas_podIdentity_isEnabled
                  value: "false"
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
                - name: appinsights_key
                  secret:
                    name: central-logging
                    key: appinsights
          EOF

      - name: Create Helm Values - legal-service
        run: |
          cat > $GITHUB_WORKSPACE/apps/$CLUSTER/legal-service-values.yaml << EOF
          ---
          apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: legal-service
            namespace: osdu-azure
          spec:
            values:
              ingress:
                dns: osdu-self-dplcedah-4ya0-gw.centralus.cloudapp.azure.com
              configuration:
              - service: legal
                repository: msosdu.azurecr.io/legal
                tag: oak
                path: /api/legal/v1/*
                probe:
                  path: /actuator/health
                  port: 8081
                  liveness:
                    delay: 250
                    seconds: 10
                keyvault: true
                request:
                  cpu: 100m
                  memory: 1500Mi
                limit:
                  cpu: 500m
                  memory: 1500Mi
                auth:
                  disable:
                    - "/"
                    - "*/index.html"
                    - "*/v2/api-docs"
                    - "*/swagger-resources"
                    - "*/swagger-ui.html"
                    - "*/configuration/ui"
                    - "*/configuration/security"
                    - "/api/legal/v1/swagger-resources/*"
                    - "/api/legal/v1/webjars/*"
                    - "*/actuator/health"
                    - "*/health"
                env:
                - name: spring_application_name
                  value: legal
                - name: server.servlet.contextPath
                  value: /api/legal/v1/
                - name: server_port
                  value: 80
                - name: ACCEPT_HTTP
                  value: true
                - name: cosmosdb_database
                  value: osdu-db
                - name: LOG_PREFIX
                  value: legal
                - name: azure_storage_container_name
                  value: legal-service-azure-configuration
                - name: azure_storage_enable_https
                  value: true
                - name: legal_service_region
                  value: us
                - name: servicebus_topic_name
                  value: legaltags
                - name: entitlements_service_endpoint
                  value: http://entitlements/api/entitlements/v2
                - name: entitlements_service_api_key
                  value: OBSOLETE
                - name: partition_service_endpoint
                  value: http://partition/api/partition/v1
                - name: azure_istioauth_enabled
                  value: true
                - name: SPRING_CONFIG_NAME
                  value: "common,application"
                - name: azure_activedirectory_AppIdUri
                  value: "api://0ef4dfd1-8adf-441b-aae9-ac7026333520"
                - name: azure_paas_podIdentity_isEnabled
                  value: "false"
                - name: KEYVAULT_URI
                  config:
                    name: osdu-svc-config
                    key: ENV_KEYVAULT
                - name: REDIS_DATABASE
                  config:
                    name: osdu-svc-config
                    key: REDIS_DB_LEGAL
                - name: aad_client_id
                  secret:
                    name: active-directory
                    key: application-appid
                - name: appinsights_key
                  secret:
                    name: central-logging
                    key: appinsights
          EOF



      #     cat > $GITHUB_WORKSPACE/apps/$CLUSTER/osdu-airflow-values.yaml << EOF
      #     ---
      #     apiVersion: helm.toolkit.fluxcd.io/v2beta1
      #     kind: HelmRelease
      #     metadata:
      #       name: airflow
      #       namespace: airflow
      #     spec:
      #       values:
      #         azure:
      #           tenant: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/tenant-id --query value -otsv)
      #           subscription: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/subscription-id --query value -otsv)
      #           resourcegroup: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-rg
      #           identity: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-cr --query value -otsv)-osdu-identity
      #           identity_id: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/osdu-identity-id --query value -otsv)
      #           keyvault: $ENV_VAULT
      #           appid: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/aad-client-id --query value -otsv)
      #         airflowLogin:
      #           name: admin
      #         airflow:
      #           ingress:
      #             host: $DNS_HOST
      #             web:
      #               annotations:
      #                 cert-manager.io/cluster-issuer: letsencrypt-prod-dns
      #               host: $DNS_HOST
      #           externalDatabase:
      #             host: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-sr --query value -otsv)-pg.postgres.database.azure.com
      #             user:  osdu_admin@$(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-sr --query value -otsv)-pg
      #           externalRedis:
      #             host: $(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/base-name-sr --query value -otsv)-cache.redis.cache.windows.net
      #           airflow:
      #             extraEnv:
      #               - name: AIRFLOW_VAR_AZURE_DNS_HOST
      #                 value: "$DNS_HOST"
      #     EOF

      - name: GitOps CheckIn
        uses: EndBug/add-and-commit@v7
        with:
          message: 'Initialize Software Install'
          add: '.'
