name: '5. Deploy Data Partition'

on:
  workflow_dispatch:

env:
  AZURE_PRINCIPAL_NAME: osdu-azure-credentials
  OSDU_PRINCIPAL_NAME: osdu-credentials
  OSDU_APPLICATION_NAME: osdu-application

jobs:

  deploy:
    name: Deploy Azure Resources
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Image
        env:
          TEMPLATE: /osdu-azure/templates/osdu-r3-mvp/central_resources
        uses: docker/build-push-action@v2
        with:
          push: false
          build-args: WORKING_DIRECTORY=${{ env.TEMPLATE }}
          # build-args: SSH_PUBLIC_KEY=${{ secrets.SSH_PUBLIC_KEY }}, SSH_PRIVATE_KEY=${{ secrets.SSH_PRIVATE_KEY }}
          tags: self-managed-osdu:partition
          outputs: type=docker,dest=/tmp/self-managed-osdu.tar

      - name: Load Docker Image
        run: docker load --input /tmp/self-managed-osdu.tar

      - name: Retrieve Environment Settings
        uses: Azure/cli@1.0.4
        with:
          inlineScript: |
            VAULT=$(az keyvault list --resource-group ${{ secrets.BUILDER_GROUP }} --query [].name -otsv)
            STORAGE=$(az keyvault secret show --id https://$VAULT.vault.azure.net/secrets/storage --query value -otsv)

            cat > $GITHUB_WORKSPACE/.env << EOF
            ## These variables support AzureRM Backend Storage State
            ARM_TENANT_ID=$(az account show --query homeTenantId -otsv)
            ARM_SUBSCRIPTION_ID=$(az account show --query id -otsv)
            ARM_CLIENT_ID=$(az keyvault secret show --id https://$VAULT.vault.azure.net/secrets/terraform-id --query value -otsv)
            ARM_CLIENT_SECRET=$(az keyvault secret show --id https://$VAULT.vault.azure.net/secrets/terraform-secret --query value -otsv)
            ARM_ACCESS_KEY=$(az storage account keys list --resource-group ${{ secrets.BUILDER_GROUP }} --account-name $STORAGE --query '[0].value' -o tsv)
            TF_VAR_remote_state_account=$STORAGE
            TF_VAR_remote_state_container=remote-state-container

            ## These variables support creating the infrastructure
            # Global Region Pair Location
            TF_VAR_cosmosdb_replica_location=$(az account list-locations --query "[?name == '${{ secrets.AZURE_LOCATION }}'].metadata.pairedRegion[0].name" -otsv)

            # Data Partition
            TF_VAR_elasticsearch_endpoint=${{ secrets.ELASTIC_ENDPOINT }}
            TF_VAR_elasticsearch_username=elastic
            TF_VAR_elasticsearch_password=${{ secrets.ELASTIC_PASSWORD }}
            EOF

      - name: Deploy Azure Resources
        env:
          CR_WORKSPACE: "cr-${{ secrets.RAND }}"
          DP_WORKSPACE: "dp-${{ secrets.RAND }}"
          TEMPLATE: /osdu-azure/templates/osdu-r3-mvp/data_partition
        run: |
          docker run --rm --env-file $GITHUB_WORKSPACE/.env \
            --env TF_VAR_workspace=${{ env.DP_WORKSPACE }} \
            --env TF_VAR_resource_group_location="${{ secrets.AZURE_LOCATION }}" \
            --env TF_VAR_central_resources_workspace_name=${{ env.CR_WORKSPACE }}  \
            --workdir ${{ env.TEMPLATE }} \
            self-managed-osdu:partition
        shell: bash
