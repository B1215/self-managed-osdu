name: 'Stuff'

on:
  workflow_dispatch:

jobs:

  cosmos-data:
    name: Load Data - TenantInfo
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Install dependencies
        run: python -m pip install --upgrade pip azure-cosmos

      - name: Load Record
        env:
          PARTITION_NAME: opendes
        run: |
          GROUP=$(az group list --query "[?contains(name, 'cpl${{ secrets.RAND }}')].name" -otsv)
          ENV_VAULT=$(az keyvault list --resource-group $GROUP --query [].name -otsv)

          export COSMOS_ENDPOINT=$(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/${PARTITION_NAME}-cosmos-endpoint --query value -otsv)
          export COSMOS_KEY=$(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/${PARTITION_NAME}-cosmos-primary-key --query value -otsv)
          export SERVICE_PRINCIPAL_ID=$(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/app-dev-sp-username --query value -otsv)
          export SERVICE_PRINCIPAL_OID=$(az keyvault secret show --id https://${ENV_VAULT}.vault.azure.net/secrets/app-dev-sp-id --query value -otsv)

          python3 scripts/upload-data.py


  partition-data:
    name: Load Data - PartitionInfo
    runs-on: ubuntu-latest
    steps:

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Upload Partition Info
        env:
          TABLE: PartitionInfo
          PARTITION_NAME: opendes
        uses: Azure/cli@1.0.4
        with:
          inlineScript: |
            GROUP=$(az group list --query "[?contains(name, 'cpl${{ secrets.RAND }}')].name" -otsv)
            STORAGE_NAME=$(az storage account list --resource-group $GROUP --query [].name -otsv)
            STORAGE_KEY=$(az storage account keys list -g $GROUP -n $STORAGE_NAME --query [0].value -otsv)

            az storage entity insert --account-name $STORAGE_NAME --account-key $STORAGE_KEY \
                --if-exists replace --table-name $TABLE \
                --entity PARTITIONKEY=opendes ROWKEY=id SENSITIVE=false VALUE=$PARTITION_NAME

            az storage entity insert --account-name $STORAGE_NAME --account-key $STORAGE_KEY \
                --if-exists replace --table-name $TABLE \
                --entity PARTITIONKEY=opendes ROWKEY=compliance-ruleset SENSITIVE=false VALUE=shared

            DATASET=('elastic-endpoint' \
                     'elastic-username' \
                     'elastic-password' \
                     'cosmos-connection' \
                     'cosmos-endpoint' \
                     'cosmos-primary-key' \
                     'sb-connection' \
                     'sb-namespace' \
                     'storage-account-key' \
                     'storage-account-name' \
                     'ingest-storage-account-name' \
                     'ingest-storage-account-key' \
                     'eventgrid-recordstopic' \
                     'eventgrid-recordstopic-accesskey' \
                     'eventgrid-legaltagschangedtopic' \
                     'eventgrid-legaltagschangedtopic-accesskey' \
                     'eventgrid-resourcegroup' \
                     'encryption-key-identifier' \
                     'sdms-storage-account-name' \
                     'sdms-storage-account-key' \
                     'eventgrid-schemanotificationtopic' \
                     'eventgrid-schemanotificationtopic-accesskey' \
                     'eventgrid-gsmtopic' \
                     'eventgrid-gsmtopic-accesskey' \
                     'eventgrid-statuschangedtopic' \
                     'eventgrid-statuschangedtopic-accesskey' \
                     'eventgrid-schemachangedtopic' \
                     'eventgrid-schemachangedtopic-accesskey')

            for item in "${DATASET[@]}"
            do
              az storage entity insert --account-name $STORAGE_NAME --account-key $STORAGE_KEY \
                --if-exists replace --table-name $TABLE \
                --entity PARTITIONKEY=$PARTITION_NAME ROWKEY=$item SENSITIVE=true VALUE=$PARTITION_NAME-$item
            done






